=== PLAIN MODE ===
In cvx/001.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/001.m, line 2
|     variable X( n, n ) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/001.m, line 2
|     variable X( n, n ) symmetric
|                        ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/001.m, line 3
|     dual variable y{n}
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/001.m, line 3
|     dual variable y{n}
|                   ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/001.m, line 4
|     dual variable Z
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/001.m, line 4
|     dual variable Z
|                   ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/001.m, line 5
|     minimize((n - 1:-1:0) * diag(X))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/001.m, line 5
|     minimize((n - 1:-1:0) * diag(X))
|                                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/001.m, line 6
|     for k = 1:n
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/001.m, line 7
|         sum(diag(X, k - 1)) == b(k):y{k};
|         ^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/001.m, line 8
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/001.m, line 9
|     X >= 0:Z;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/001.m, line 10
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/002.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/002.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/002.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/002.m, line 3
|     minimize(norm(A * x - b, 1) + gamma(k) * norm(x, Inf))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/002.m, line 3
|     minimize(norm(A * x - b, 1) + gamma(k) * norm(x, Inf))
|                                                          ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/002.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/003.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/003.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/003.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/003.m, line 3
|     dual variables y z
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/003.m, line 3
|     dual variables y z
|                      ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/003.m, line 4
|     minimize(c' * x + d)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/003.m, line 4
|     minimize(c' * x + d)
|                        ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/003.m, line 5
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/003.m, line 5
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/003.m, line 6
|         y:A * x == b;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/003.m, line 7
|         z:x >= 0;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/003.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/004.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/004.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/004.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/004.m, line 3
|     dual variables y z
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/004.m, line 3
|     dual variables y z
|                      ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/004.m, line 4
|     minimize(c' * x + d)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/004.m, line 4
|     minimize(c' * x + d)
|                        ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/004.m, line 5
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/004.m, line 5
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/004.m, line 6
|         y:A * x <= b;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/004.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/005.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/005.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/005.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/005.m, line 3
|     minimize(norm(A * x - b))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/005.m, line 3
|     minimize(norm(A * x - b))
|                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/005.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/006.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/006.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/006.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/006.m, line 3
|     dual variable y
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/006.m, line 3
|     dual variable y
|                   ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/006.m, line 4
|     minimize(norm(A * x - b, p))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/006.m, line 4
|     minimize(norm(A * x - b, p))
|                                ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/006.m, line 5
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/006.m, line 5
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/006.m, line 6
|         y:C * x == d;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/006.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/007.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/007.m, line 2
|     if mod(iter, 2) == 1
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/007.m, line 3
|         variable X(k,n)
|         ^^^^^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/007.m, line 3
|         variable X(k,n)
|                  ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/007.m, line 4
|         X >= 0;
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/007.m, line 5
|     else
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/007.m, line 6
|         variable Y(m,k)
|         ^^^^^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/007.m, line 6
|         variable Y(m,k)
|                  ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/007.m, line 7
|         Y >= 0;
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/007.m, line 8
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/007.m, line 9
|     minimize(norm(A - Y * X, 'fro'))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/007.m, line 9
|     minimize(norm(A - Y * X, 'fro'))
|                                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/007.m, line 10
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 3
|     minimize(norm(A * x - b))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 3
|     minimize(norm(A * x - b))
|                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 5
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 6
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 6
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 7
|     minimize(norm(A * x - b))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 7
|     minimize(norm(A * x - b))
|                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 8
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 8
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 9
|         l <= x <= u;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/008.m, line 10
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 11
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 12
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 12
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 13
|     minimize(norm(A * x - b, Inf))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 13
|     minimize(norm(A * x - b, Inf))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 14
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 15
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 16
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 16
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 17
|     minimize(norm(A * x - b, 1))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 17
|     minimize(norm(A * x - b, 1))
|                                ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 18
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 19
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 20
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 20
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 21
|     minimize(norm_largest(A * x - b, k))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 21
|     minimize(norm_largest(A * x - b, k))
|                                        ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 22
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 23
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 24
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 24
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 25
|     minimize(sum(huber(A * x - b)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 25
|     minimize(sum(huber(A * x - b)))
|                                   ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 26
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 27
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 28
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 28
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 29
|     minimize(norm(A * x - b))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 29
|     minimize(norm(A * x - b))
|                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 30
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 30
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 31
|         C * x == d;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/008.m, line 32
|         norm(x, Inf) <= 1;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/008.m, line 33
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 34
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 35
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 35
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 36
|     minimize(norm(A * x - b) + gamma(k) * norm(x, 1))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/008.m, line 36
|     minimize(norm(A * x - b) + gamma(k) * norm(x, 1))
|                                                     ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/008.m, line 37
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/009.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/009.m, line 2
|     variable Z(n,n) hermitian toeplitz
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/009.m, line 2
|     variable Z(n,n) hermitian toeplitz
|                               ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/009.m, line 3
|     dual variable Q
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/009.m, line 3
|     dual variable Q
|                   ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/009.m, line 4
|     minimize(norm(Z - P, 'fro'))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/009.m, line 4
|     minimize(norm(Z - P, 'fro'))
|                                ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/009.m, line 5
|     Z >= 0:Q;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/009.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/010.m, line 1
| cvx_begin sdp quiet
|               ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/010.m, line 2
|     variable x(m)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/010.m, line 2
|     variable x(m)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/010.m, line 3
|     variable G(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/010.m, line 3
|     variable G(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/010.m, line 4
|     variable C(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/010.m, line 4
|     variable C(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/010.m, line 5
|     minimize(L' * x)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/010.m, line 5
|     minimize(L' * x)
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/010.m, line 6
|     G == reshape(GG * [1; x], n, n);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/010.m, line 7
|     C == reshape(CC * [1; x], n, n);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/010.m, line 8
|     for k = 1:n
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/010.m, line 9
|         delay * G - C + sparse(k, k, delay, n, n) >= 0;
|         ^^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/010.m, line 10
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/010.m, line 11
|     0 <= x <= wmax;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/010.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/011.m, line 1
| cvx_begin sdp quiet
|               ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/011.m, line 2
|     variable x(m)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/011.m, line 2
|     variable x(m)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/011.m, line 3
|     variable G(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/011.m, line 3
|     variable G(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/011.m, line 4
|     variable C(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/011.m, line 4
|     variable C(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/011.m, line 5
|     minimize(sum(x))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/011.m, line 5
|     minimize(sum(x))
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/011.m, line 6
|     G == reshape(GG * [1; x], n, n);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/011.m, line 7
|     C == reshape(CC * [1; x], n, n);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/011.m, line 8
|     delay * G - C >= 0;
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/011.m, line 9
|     0 <= x <= wmax;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/011.m, line 10
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/012.m, line 1
| cvx_begin gp quiet
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/012.m, line 2
|     if need_sedumi
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 3
|         cvx_solver sedumi
|         ^^^^^^^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/012.m, line 3
|         cvx_solver sedumi
|                    ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/012.m, line 4
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/012.m:5: style: whitespace on blank line [fixed]
In cvx/012.m, line 6
|     % device width variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 7
|     variable w(N)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 7
|     variable w(N)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/012.m:8: style: whitespace on blank line [fixed]
In cvx/012.m, line 9
|     % device specs
|     ^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 10
|     device(1:2) = PMOS;
|     ^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 11
|     device(3:4) = NMOS;
|     ^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/012.m:12: style: whitespace on blank line [fixed]
In cvx/012.m, line 13
|     for num = 1:N
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 14
|         device(num).R   = device(num).R / w(num);
|         ^^^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/012.m, line 15
|         device(num).Cdb = device(num).Cdb * w(num);
|         ^^^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/012.m, line 16
|         device(num).Csb = device(num).Csb * w(num);
|         ^^^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/012.m, line 17
|         device(num).Cgb = device(num).Cgb * w(num);
|         ^^^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/012.m, line 18
|         device(num).Cgs = device(num).Cgs * w(num);
|         ^^^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/012.m, line 19
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/012.m:20: style: whitespace on blank line [fixed]
In cvx/012.m, line 21
|     % capacitances
|     ^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 22
|     C1 = sum([device(1:3).Cdb]) + Cload;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 23
|     C2 = device(3).Csb + device(4).Cdb;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/012.m:24: style: whitespace on blank line [fixed]
In cvx/012.m, line 25
|     % input capacitances
|     ^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 26
|     Cin_A = sum([device([2 3]).Cgb]) + sum([device([2 3]).Cgs]);
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 27
|     Cin_B = sum([device([1 4]).Cgb]) + sum([device([1 4]).Cgs]);
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/012.m:28: style: whitespace on blank line [fixed]
In cvx/012.m, line 29
|     % resistances
|     ^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 30
|     R = [device.R]';
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/012.m:31: style: whitespace on blank line [fixed]
In cvx/012.m, line 32
|     % area definition
|     ^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 33
|     area = sum(w);
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/012.m:34: style: whitespace on blank line [fixed]
In cvx/012.m, line 35
|     % delays and dissipated energies for all six possible transitions
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 36
|     % transition 1 is A: 1->1, B: 1->0, Z: 0->1
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 37
|     D1 = R(1) * (C1 + C2);
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 38
|     E1 = (C1 + C2) * Vdd^2 / 2;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 39
|     % transition 2 is A: 1->0, B: 1->1, Z: 0->1
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 40
|     D2 = R(2) * C1;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 41
|     E2 = C1 * Vdd^2 / 2;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 42
|     % transition 3 is A: 1->0, B: 1->0, Z: 0->1
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 43
|     % D3 = C1*R(1)*R(2)/(R(1) + R(2)); % not a posynomial
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 44
|     E3 = C1 * Vdd^2 / 2;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 45
|     % transition 4 is A: 1->1, B: 0->1, Z: 1->0
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 46
|     D4 = C1 * R(3) + R(4) * (C1 + C2);
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 47
|     E4 = (C1 + C2) * Vdd^2 / 2;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 48
|     % transition 5 is A: 0->1, B: 1->1, Z: 1->0
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 49
|     D5 = C1 * (R(3) + R(4));
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 50
|     E5 = (C1 + C2) * Vdd^2 / 2;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 51
|     % transition 6 is A: 0->1, B: 0->1, Z: 1->0
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 52
|     D6 = C1 * R(3) + R(4) * (C1 + C2);
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 53
|     E6 = (C1 + C2) * Vdd^2 / 2;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/012.m:54: style: whitespace on blank line [fixed]
In cvx/012.m, line 55
|     % objective is the worst-case delay
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 56
|     minimize(max([D1 D2 D4]))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 56
|     minimize(max([D1 D2 D4]))
|                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/012.m, line 57
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/012.m, line 57
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/012.m, line 58
|         area <= Amax(k);
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/012.m, line 59
|         w >= wmin;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/012.m, line 60
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/013.m, line 1
| cvx_begin gp quiet
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/013.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/013.m, line 3
|     variable w(N-1)     % wire width
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/013.m, line 3
|     variable w(N-1)     % wire width
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/013.m, line 4
|     variable T(N)       % arrival time (Elmore delay to node i)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/013.m, line 4
|     variable T(N)       % arrival time (Elmore delay to node i)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/013.m:5: style: whitespace on blank line [fixed]
In cvx/013.m, line 6
|     % objective is the critical Elmore delay
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/013.m, line 7
|     minimize(max(T(leafs)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/013.m, line 7
|     minimize(max(T(leafs)))
|                           ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/013.m, line 8
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/013.m, line 8
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/013.m:9: style: whitespace on blank line [fixed]
In cvx/013.m, line 10
|         % wire segment resistance is inversely proportional to widths
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 11
|         R = alpha .* l ./ w;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 12
|         R = [Rsource; R];
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/013.m:13: style: whitespace on blank line [fixed]
In cvx/013.m, line 14
|         % wire segment capacitance is an affine function of widths
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 15
|         C_bar = beta .* l .* w + gamma .* l;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 16
|         C_bar = [0; C_bar];
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/013.m:17: style: whitespace on blank line [fixed]
In cvx/013.m, line 18
|         % compute common capacitances for each node (C_tilde in GP tutorial)
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 19
|         C_tilde = cvx(zeros(N, 1));
|         ^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 20
|         for node = [1:N]
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 21
|             C_tilde(node, 1) = Cload(node);
|             ^^^^^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/013.m, line 22
|             for k = parent(node)
|             ^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/013.m, line 23
|                 if k > 0
|                 ^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/013.m, line 24
|                     C_tilde(node, 1) = C_tilde(node, 1) + C_bar(k);
|                     ^^^^^^^ style: indentation not correct, should be 12 spaces, not 20 [fixed] [indentation]
In cvx/013.m, line 25
|                 end
|                 ^^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/013.m, line 26
|             end
|             ^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/013.m, line 27
|             for k = children{node}
|             ^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/013.m, line 28
|                 C_tilde(node, 1) = C_tilde(node, 1) + C_bar(k);
|                 ^^^^^^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/013.m, line 29
|             end
|             ^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/013.m, line 30
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/013.m:31: style: whitespace on blank line [fixed]
In cvx/013.m, line 32
|         % now compute total downstream capacitances
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 33
|         C_total = C_tilde;
|         ^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 34
|         for node = N:-1:1
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 35
|             for k = children{node}
|             ^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/013.m, line 36
|                 C_total(node, 1) = C_total(node, 1) + C_total(k, 1);
|                 ^^^^^^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/013.m, line 37
|             end
|             ^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/013.m, line 38
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/013.m:39: style: whitespace on blank line [fixed]
In cvx/013.m, line 40
|         % generate Elmore delay constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 41
|         R(1) * C_total(1) <= T(1, 1);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 42
|         for node = 2:N
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 43
|             R(node) * C_total(node) + T(parent(node), 1) <= T(node, 1);
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/013.m, line 44
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/013.m:45: style: whitespace on blank line [fixed]
In cvx/013.m, line 46
|         % collect all the constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 47
|         sum(w .* l) <= Amax;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 48
|         Wmin <= w <= Wmax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/013.m, line 49
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/014.m, line 1
| cvx_begin sdp quiet
|               ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/014.m, line 2
|     variable x(m)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/014.m, line 2
|     variable x(m)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/014.m, line 3
|     variable G(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/014.m, line 3
|     variable G(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/014.m, line 4
|     variable C(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/014.m, line 4
|     variable C(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/014.m, line 5
|     dual variables Y1 Y2 Y3 Y4 Y5
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/014.m, line 5
|     dual variables Y1 Y2 Y3 Y4 Y5
|                                ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/014.m, line 6
|     minimize(sum(C(:)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/014.m, line 6
|     minimize(sum(C(:)))
|                       ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/014.m, line 7
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/014.m, line 7
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/014.m, line 8
|         G == reshape(GG * [1; x], n, n);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/014.m, line 9
|         C == reshape(CC * [1; x], n, n);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/014.m, line 10
|         delay * G - C >= 0;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/014.m, line 11
|         0 <= x <= wmax;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/014.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/015.m, line 1
| cvx_begin sdp quiet
|               ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/015.m, line 2
|     variables w(m,2) d(1,2)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/015.m, line 2
|     variables w(m,2) d(1,2)
|                      ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/015.m, line 3
|     variable G(n,n,2) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/015.m, line 3
|     variable G(n,n,2) symmetric
|                       ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/015.m, line 4
|     variable C(n,n,2) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/015.m, line 4
|     variable C(n,n,2) symmetric
|                       ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/015.m, line 5
|     minimize(L * sum(d) + sum(w(:)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/015.m, line 5
|     minimize(L * sum(d) + sum(w(:)))
|                                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/015.m, line 6
|     G == reshape(GG * [1; w(:); d(:)], n, n, 2);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/015.m, line 7
|     C == reshape(CC * [1; w(:); d(:)], n, n, 2);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/015.m, line 8
|     % This is actually two LMIs, one for each circuit
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/015.m, line 9
|     (delay / 2) * G - C >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/015.m, line 10
|     0 <= w(:) <= wmax;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/015.m, line 11
|     d(:) >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/015.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/016.m, line 1
| cvx_begin gp quiet
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/016.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 3
|     variable x(m)                 % scale factor
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 3
|     variable x(m)                 % scale factor
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/016.m, line 4
|     variable T(m)                 % arrival times
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 4
|     variable T(m)                 % arrival times
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/016.m:5: style: whitespace on blank line [fixed]
In cvx/016.m, line 6
|     % input capacitance is an affine function of sizes
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 7
|     Cin  = Cin_norm .* x;
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 8
|     Cint = Cint_norm .* x;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/016.m:9: style: whitespace on blank line [fixed]
In cvx/016.m, line 10
|     % driving resistance is inversily proportional to sizes
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 11
|     R = Rdrv_norm ./ x;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/016.m:12: style: whitespace on blank line [fixed]
In cvx/016.m, line 13
|     % gate delay is the product of its driving resistance and load cap.
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 14
|     Cload = cvx(zeros(m, 1));
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 15
|     for gate = 1:m
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 16
|         if ~ismember(FO{gate}, primary_outputs)
|         ^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/016.m, line 17
|             Cload(gate) = sum(Cin(FO{gate}));
|             ^^^^^ style: indentation not correct, should be 8 spaces, not 12 [fixed] [indentation]
In cvx/016.m, line 18
|         else
|         ^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/016.m, line 19
|             Cload(gate) = Cin_po(FO{gate});
|             ^^^^^ style: indentation not correct, should be 8 spaces, not 12 [fixed] [indentation]
In cvx/016.m, line 20
|         end
|         ^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/016.m, line 21
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/016.m:22: style: whitespace on blank line [fixed]
In cvx/016.m, line 23
|     % delay
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 24
|     D = 0.69 * ones(m, 1) .* R .* (Cint + Cload);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/016.m:25: style: whitespace on blank line [fixed]
In cvx/016.m, line 26
|     % total area
|     ^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 27
|     area = A_norm' * x;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/016.m:28: style: whitespace on blank line [fixed]
In cvx/016.m, line 29
|     % total power calculation
|     ^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 30
|     Pdyn = Vdd^2 * sum(f_pi(primary_inputs) .* Cload_pi(primary_inputs)) + ...
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 31
|     Vdd^2 * (f_gates' * (Cint + Cload));
|     ^^^ style: indentation not correct, should be 2 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 32
|     Pstat = Vdd * Ileak_norm' * x;
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 33
|     power = Pdyn + Pstat;
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/016.m:34: style: whitespace on blank line [fixed]
In cvx/016.m, line 35
|     minimize(max(T(output_gates)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 35
|     minimize(max(T(output_gates)))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/016.m, line 36
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/016.m, line 36
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/016.m, line 37
|         % constraints
|         ^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/016.m, line 38
|         x >= 1;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/016.m, line 39
|         area <= Amax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/016.m, line 40
|         power <= Pmax(n);
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/016.m:41: style: whitespace on blank line [fixed]
In cvx/016.m, line 42
|         % create timing constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/016.m, line 43
|         for gate = 1:m
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/016.m, line 44
|             if ~ismember(FI{gate}, primary_inputs)
|             ^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/016.m, line 45
|                 for j = FI{gate}
|                 ^^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/016.m, line 46
|                     % enforce T_j + D_j <= T_i over all gates j that drive i
|                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 12 spaces, not 20 [fixed] [indentation]
In cvx/016.m, line 47
|                     D(gate) + T(j) <= T(gate);
|                     ^ style: indentation not correct, should be 12 spaces, not 20 [fixed] [indentation]
In cvx/016.m, line 48
|                 end
|                 ^^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/016.m, line 49
|             else
|             ^^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/016.m, line 50
|                 % enforce D_i <= T_i for gates i connected to primary inputs
|                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/016.m, line 51
|                 D(gate) <= T(gate);
|                 ^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/016.m, line 52
|             end
|             ^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/016.m, line 53
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/016.m, line 54
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/017.m, line 1
| cvx_begin gp
|           ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/017.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/017.m, line 3
|     variable x(N)                 % sizes
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/017.m, line 3
|     variable x(N)                 % sizes
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/017.m, line 4
|     variable T(N)                 % arrival times
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/017.m, line 4
|     variable T(N)                 % arrival times
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/017.m:5: style: whitespace on blank line [fixed]
In cvx/017.m, line 6
|     % minimize the sum of scale factors subject to above constraints
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/017.m, line 7
|     minimize(sum(x))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/017.m, line 7
|     minimize(sum(x))
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/017.m, line 8
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/017.m, line 8
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/017.m:9: style: whitespace on blank line [fixed]
In cvx/017.m, line 10
|         % input capacitance is an affine function of sizes
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 11
|         Cin  = Cin_norm .* x;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 12
|         Cint = Cint_norm .* x;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/017.m:13: style: whitespace on blank line [fixed]
In cvx/017.m, line 14
|         % driving resistance is inversily proportional to sizes
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 15
|         R = Rdrv_norm ./ x;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/017.m:16: style: whitespace on blank line [fixed]
In cvx/017.m, line 17
|         % gate delay is the product of its driving resistance and load cap.
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 18
|         Cload = cvx(zeros(N, 1));
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 19
|         for gate = 1:N
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 20
|             if ~ismember(FO{gate}, primary_outputs)
|             ^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/017.m, line 21
|                 Cload(gate) = sum(Cin(FO{gate}));
|                 ^^^^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/017.m, line 22
|             else
|             ^^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/017.m, line 23
|                 Cload(gate) = Cin_po(FO{gate});
|                 ^^^^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/017.m, line 24
|             end
|             ^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/017.m, line 25
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/017.m:26: style: whitespace on blank line [fixed]
In cvx/017.m, line 27
|         % delay
|         ^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 28
|         D = 0.69 * ones(N, 1) .* R .* (Cint + Cload);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/017.m:29: style: whitespace on blank line [fixed]
In cvx/017.m, line 30
|         % create timing constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 31
|         for gate = 1:N
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 32
|             if ~ismember(FI{gate}, primary_inputs)
|             ^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/017.m, line 33
|                 for j = FI{gate}
|                 ^^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/017.m, line 34
|                     % enforce T_j + D_j <= T_i over all gates j that drive i
|                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 12 spaces, not 20 [fixed] [indentation]
In cvx/017.m, line 35
|                     D(gate) + T(j) <= T(gate);
|                     ^ style: indentation not correct, should be 12 spaces, not 20 [fixed] [indentation]
In cvx/017.m, line 36
|                 end
|                 ^^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/017.m, line 37
|             else
|             ^^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/017.m, line 38
|                 % enforce D_i <= T_i for gates i connected to primary inputs
|                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/017.m, line 39
|                 D(gate) <= T(gate);
|                 ^ style: indentation not correct, should be 8 spaces, not 16 [fixed] [indentation]
In cvx/017.m, line 40
|             end
|             ^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/017.m, line 41
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/017.m:42: style: whitespace on blank line [fixed]
In cvx/017.m, line 43
|         % circuit delay is the max of arrival times for output gates
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 44
|         output_gates = [FI{primary_outputs}];
|         ^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 45
|         circuit_delay = max(T(output_gates));
|         ^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/017.m:46: style: whitespace on blank line [fixed]
In cvx/017.m, line 47
|         % collect all the constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 48
|         circuit_delay <= Dmax;
|         ^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 49
|         x_min <= x <= x_max;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/017.m, line 50
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/018.m, line 1
| cvx_begin sdp quiet
|               ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/018.m, line 2
|     variables w(m,3) t(m,2) s(1,2)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/018.m, line 2
|     variables w(m,3) t(m,2) s(1,2)
|                             ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/018.m, line 3
|     variable G(N,N) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/018.m, line 3
|     variable G(N,N) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/018.m, line 4
|     variable C(N,N) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/018.m, line 4
|     variable C(N,N) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/018.m, line 5
|     minimize(sum(s))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/018.m, line 5
|     minimize(sum(s))
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/018.m, line 6
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/018.m, line 6
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/018.m, line 7
|         G == reshape(GG * [1; w(:)], N, N);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/018.m, line 8
|         C == reshape(CC * [1; w(:); t(:)], N, N);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/018.m, line 9
|         delay * G - C >= 0;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/018.m, line 10
|         wmin <= w(:) <= wmax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/018.m, line 11
|         t(:) <= 1 / smin;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/018.m, line 12
|         s(:) <= smax;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/018.m, line 13
|         inv_pos(t(:, 1)) <= s(1) - w(:, 1) - 0.5 * w(:, 2);
|         ^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/018.m, line 14
|         inv_pos(t(:, 2)) <= s(2) - w(:, 3) - 0.5 * w(:, 2);
|         ^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/018.m, line 15
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/019.m, line 1
| cvx_begin sdp quiet
|               ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/019.m, line 2
|     variable x(6)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/019.m, line 2
|     variable x(6)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/019.m, line 3
|     variable G(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/019.m, line 3
|     variable G(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/019.m, line 4
|     variable C(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/019.m, line 4
|     variable C(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/019.m, line 5
|     minimize(sum(x))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/019.m, line 5
|     minimize(sum(x))
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/019.m, line 6
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/019.m, line 6
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/019.m, line 7
|         G == reshape(GG * [1; x], n, n);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/019.m, line 8
|         C == reshape(CC * [1; x], n, n);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/019.m, line 9
|         delay * G - C >= 0;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/019.m, line 10
|         0 <= x <= wmax;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/019.m, line 11
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 1
| cvx_begin gp quiet
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 3
|     variable D        % diameter of loop inductor
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 3
|     variable D        % diameter of loop inductor
|              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 4
|     variable W        % width of loop inductor
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 4
|     variable W        % width of loop inductor
|              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 5
|     variable SRF      % self resonance frequency
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 5
|     variable SRF      % self resonance frequency
|              ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 6
|     variable l        % length of CMOS transistor
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 6
|     variable l        % length of CMOS transistor
|              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 7
|     variable w        % width of CMOS transistor
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 7
|     variable w        % width of CMOS transistor
|              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 8
|     variable Imax     % maximum current through CMOS transistor
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 8
|     variable Imax     % maximum current through CMOS transistor
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 9
|     variable VOsc     % differential voltage amplitude
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 9
|     variable VOsc     % differential voltage amplitude
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 10
|     variable CT       % total capacitance of oscillator
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 10
|     variable CT       % total capacitance of oscillator
|              ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 11
|     variable Csw      % maximum switching capacitance
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 11
|     variable Csw      % maximum switching capacitance
|              ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 12
|     variable Cvar     % minimum variable capacitance
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 12
|     variable Cvar     % minimum variable capacitance
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 13
|     variable IBias    % bias current
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 13
|     variable IBias    % bias current
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 14
|     variable CMaxFreq % capacitor max frequency
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 14
|     variable CMaxFreq % capacitor max frequency
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/020.m:15: style: whitespace on blank line [fixed]
In cvx/020.m, line 16
|     % minimize power = Vdd*IBias;
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 17
|     minimize(Vdd * IBias)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 17
|     minimize(Vdd * IBias)
|                         ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 18
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/020.m, line 18
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/020.m, line 19
|         % *******************************************%
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 20
|         % loop inductor definitions and constraints %
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 21
|         % *******************************************%
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 22
|         SRFSpec  = 3 * F;
|         ^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 23
|         omegaSRF = 2 * pi * SRF;
|         ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/020.m:24: style: whitespace on blank line [fixed]
In cvx/020.m, line 25
|         % inductance
|         ^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 26
|         L = 2.1e-06 * D^(1.28) * (W)^(-0.25) * (F)^(-0.01);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 27
|         % series resistance
|         ^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 28
|         R = 0.1 * D / W + 3e-6 * D * W^(-0.84) * F^(0.5) + 5e-9 * D * W^(-0.76) * F^(0.75) + 0.02 * D * W * F;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 28
|         R = 0.1 * D / W + 3e-6 * D * W^(-0.84) * F^(0.5) + 5e-9 * D * W^(-0.76) * F^(0.75) + 0.02 * D * W * F;
|                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: line exceeds 80 characters [line_length]
In cvx/020.m, line 29
|         % effective capacitance
|         ^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 30
|         C = 1e-11 * D + 5e-6 * D * W;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/020.m:31: style: whitespace on blank line [fixed]
In cvx/020.m, line 32
|         % area, tank conductance, and inverse quality factor
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 33
|         Area = (D + W)^2;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 34
|         G    = R / (omega * L)^2;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 35
|         invQ = R / (omega * L);
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/020.m:36: style: whitespace on blank line [fixed]
In cvx/020.m, line 37
|         % loop constraints
|         ^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 38
|         Area <= 0.25e-6;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 39
|         W <= 30e-6;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 40
|         5e-6 <= W;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 41
|         10 * W <= D;
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 42
|         D <= 100 * W;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 43
|         SRFSpec <= SRF;
|         ^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 44
|         omegaSRF^2 * L * C <= 1;
|         ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/020.m:45: style: whitespace on blank line [fixed]
In cvx/020.m, line 46
|         % ****************************************%
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 47
|         % transistor definitions and constraints %
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 48
|         % ****************************************%
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 49
|         GM  = 6e-3 * (w / l)^0.6 * (Imax / 2)^(0.4);
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 50
|         GD  = 4e-10 * (w / l)^0.4 * (Imax / 2)^(0.6) * 1 / l;
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 51
|         Vgs = 0.34 + 1e-8 / l + 800 * (Imax * l / (2 * w))^0.7;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 52
|         Cgs = 1e-2 * w * l;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 53
|         Cgd = 1e-9 * w;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 54
|         Cdb = 1e-9 * w;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/020.m:55: style: whitespace on blank line [fixed]
In cvx/020.m, line 56
|         % transistor constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 57
|         2e-6 <= w;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 58
|         0.13e-6 <= l;
|         ^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 59
|         l <= 1e-6;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/020.m:60: style: whitespace on blank line [fixed]
In cvx/020.m, line 61
|         % ***************************************************%
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 62
|         % overall LC oscillator definitions and constraints %
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 63
|         % ***************************************************%
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 64
|         invVOsc = (G + GD) / IBias;
|         ^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/020.m:65: style: whitespace on blank line [fixed]
In cvx/020.m, line 66
|         % phase noise
|         ^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 67
|         kT4  = 4 * 1.38e-23 * 300;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 68
|         kT4G = 2 * kT4;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 69
|         LoopCurrentNoise = kT4 * G;
|         ^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 70
|         TransistorCurrentNoise = 0.5 * kT4G * GM;
|         ^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 71
|         PN = 1 / (160 * (FOff * VOsc * CT)^2) * (LoopCurrentNoise + TransistorCurrentNoise);
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 71
|         PN = 1 / (160 * (FOff * VOsc * CT)^2) * (LoopCurrentNoise + TransistorCurrentNoise);
|                                                                                 ^^^^^^^^^^^^^ style: line exceeds 80 characters [line_length]
cvx/020.m:72: style: whitespace on blank line [fixed]
In cvx/020.m, line 73
|         % capacitance
|         ^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 74
|         Cfix = C + 0.5 * (CL + Cgs + Cdb + 4 * Cgd); % fixed capacitance
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 75
|         CDiffMaxFreq = Cfix + 0.5 * Cvar;
|         ^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/020.m:76: style: whitespace on blank line [fixed]
In cvx/020.m, line 77
|         invLoopGain = (G + 0.5 * GD) / (0.5 * GM);
|         ^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/020.m:78: style: whitespace on blank line [fixed]
In cvx/020.m, line 79
|         % LC oscillator constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 80
|         PN <= PNSpec;
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 81
|         omega^2 * L * CT == 1;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 82
|         omega^2 * (1 + T)^2 * L * CMaxFreq == 1;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 83
|         4 * T / ((1 - T^2)^2) * CT <= Csw * (1 + CvarCswLSBOverlap / CswSegs);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 84
|         Csw * CvarCswLSBOverlap / CswSegs <= 0.5 * Cvar * (CvarRatio - 1);
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 85
|         CDiffMaxFreq <= CMaxFreq;
|         ^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 86
|         VOsc + 2 * Vbias <= 2 * Vdd;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 87
|         VOsc * invVOsc <= 1;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 88
|         invLoopGain * LoopGainSpec <= 1; % loop gain spec
|         ^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 89
|         Vbias + Vgs + IBias / 2 * R / 2 <= Vdd;  % bias constraint spec
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 90
|         Imax == IBias;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/020.m, line 91
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/021.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/021.m, line 2
|     variable x_l1(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/021.m, line 2
|     variable x_l1(n)
|              ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/021.m, line 3
|     minimize(norm(x_l1, 1))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/021.m, line 3
|     minimize(norm(x_l1, 1))
|                           ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/021.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/021.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/021.m, line 5
|         A * x_l1 <= b;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/021.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/021.m, line 7
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/021.m, line 8
|     variable x_log(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/021.m, line 8
|     variable x_log(n)
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/021.m, line 9
|     minimize(sum(W .* abs(x_log)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/021.m, line 9
|     minimize(sum(W .* abs(x_log)))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/021.m, line 10
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/021.m, line 10
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/021.m, line 11
|         A * x_log <= b;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/021.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/022.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/022.m, line 2
|     variables lambda(m)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/022.m, line 2
|     variables lambda(m)
|               ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/022.m, line 3
|     minimize(sum(lambda))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/022.m, line 3
|     minimize(sum(lambda))
|                         ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/022.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/022.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/022.m, line 5
|         A' * lambda == 0;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/022.m, line 6
|         b' * lambda == -1;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/022.m, line 7
|         lambda >= 0;
|         ^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/022.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/023.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/023.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/023.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/023.m, line 3
|     minimize(sum(max(A * x - b, 0)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/023.m, line 3
|     minimize(sum(max(A * x - b, 0)))
|                                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/023.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/024.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/024.m, line 2
|     variable x1(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 2
|     variable x1(n)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/024.m, line 3
|     minimize (quad_form(x1, sig))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 3
|     minimize (quad_form(x1, sig))
|                                 ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/024.m, line 4
|     p_mean' * x1 >= r_min;
|     ^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 5
|     ones(1, n) * x1 == 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 6
|     x1 >= 0;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 7
|     sum_largest(x1, r) <= alpha;
|     ^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/024.m, line 9
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/024.m, line 10
|     variables x2(n) u(n) t(1)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 10
|     variables x2(n) u(n) t(1)
|                          ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/024.m, line 11
|     minimize (quad_form(x2, sig))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 11
|     minimize (quad_form(x2, sig))
|                                 ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/024.m, line 12
|     p_mean' * x2 >= r_min;
|     ^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 13
|     sum(x2) == 1;
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 14
|     x2 >= 0;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 15
|     r * t + sum(u) <= alpha;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 16
|     t * ones(n, 1) + u >= x2;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 17
|     u >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/024.m, line 18
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/025.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/025.m, line 2
|     variables u(n) t1
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/025.m, line 2
|     variables u(n) t1
|                    ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/025.m, line 3
|     minimize (t1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/025.m, line 3
|     minimize (t1)
|                 ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/025.m, line 4
|     u >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/025.m, line 5
|     ones(1, n) * u == 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/025.m, line 6
|     P' * u <= t1 * ones(m, 1);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/025.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/025.m, line 8
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/025.m, line 9
|     variables v(m) t2
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/025.m, line 9
|     variables v(m) t2
|                    ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/025.m, line 10
|     maximize (t2)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/025.m, line 10
|     maximize (t2)
|                 ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/025.m, line 11
|     v >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/025.m, line 12
|     ones(1, m) * v == 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/025.m, line 13
|     P * v >= t2 * ones(n, 1);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/025.m, line 14
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/026.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/026.m, line 2
|     variable x(1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/026.m, line 2
|     variable x(1)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/026.m, line 3
|     minimize (quad_form(x, 1) + 1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/026.m, line 3
|     minimize (quad_form(x, 1) + 1)
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/026.m, line 4
|     quad_form(x, 1) - 6 * x + 8 <= u(i);
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/026.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/027.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/027.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/027.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/027.m, line 3
|     dual variables lam1 lam2 lam3
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/027.m, line 3
|     dual variables lam1 lam2 lam3
|                              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/027.m, line 4
|     minimize(0.5 * quad_form(x, P0) + q0' * x + r0)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/027.m, line 4
|     minimize(0.5 * quad_form(x, P0) + q0' * x + r0)
|                                                   ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/027.m, line 5
|     lam1:0.5 * quad_form(x, P1) + q1' * x + r1 <= 0;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/027.m, line 6
|     lam2:0.5 * quad_form(x, P2) + q2' * x + r2 <= 0;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/027.m, line 7
|     lam3:0.5 * quad_form(x, P3) + q3' * x + r3 <= 0;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/027.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/028.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/028.m, line 2
|     variable nu(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/028.m, line 2
|     variable nu(n)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/028.m, line 3
|     maximize (-sum(nu))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/028.m, line 3
|     maximize (-sum(nu))
|                       ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/028.m, line 4
|     W + diag(nu) >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/028.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/028.m, line 6
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/028.m, line 7
|     variable X(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/028.m, line 7
|     variable X(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/028.m, line 8
|     minimize (trace(W * X))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/028.m, line 8
|     minimize (trace(W * X))
|                           ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/028.m, line 9
|     diag(X) == 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/028.m, line 10
|     X >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/028.m, line 11
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/029.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/029.m, line 2
|     variable x(3)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/029.m, line 2
|     variable x(3)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/029.m, line 3
|     minimize (norm(A * x + b + epsilon(i) * d, 1))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/029.m, line 3
|     minimize (norm(A * x + b + epsilon(i) * d, 1))
|                                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/029.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 3
|     minimize (norm (A * x - b, p))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 3
|     minimize (norm (A * x - b, p))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 5
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 6
|     variables x(n) y(m)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 6
|     variables x(n) y(m)
|                    ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 7
|     minimize (norm (y, p))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 7
|     minimize (norm (y, p))
|                          ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 8
|     A * x - b == y;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 9
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 10
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 11
|     variable nu(m)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 11
|     variable nu(m)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 12
|     maximize (b' * nu)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 12
|     maximize (b' * nu)
|                      ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 13
|     norm(nu, q) <= 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 14
|     A' * nu == 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 15
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 16
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 17
|     variables x(n) y(m)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 17
|     variables x(n) y(m)
|                    ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 18
|     minimize (0.5 * square_pos (norm (y, p)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 18
|     minimize (0.5 * square_pos (norm (y, p)))
|                                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 19
|     A * x - b == y;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 20
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 21
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 22
|     variable nu(m)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 22
|     variable nu(m)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 23
|     maximize (-0.5 * square_pos (norm (nu, q)) + b' * nu)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 23
|     maximize (-0.5 * square_pos (norm (nu, q)) + b' * nu)
|                                                         ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/030.m, line 24
|     A' * nu == 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/030.m, line 25
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/031.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/031.m, line 2
|     variable u(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/031.m, line 2
|     variable u(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/031.m, line 3
|     minimize (max (P' * u))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/031.m, line 3
|     minimize (max (P' * u))
|                           ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/031.m, line 4
|     u >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/031.m, line 5
|     ones(1, n) * u == 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/031.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/031.m, line 7
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/031.m, line 8
|     variable v(m)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/031.m, line 8
|     variable v(m)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/031.m, line 9
|     maximize (min (P * v))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/031.m, line 9
|     maximize (min (P * v))
|                          ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/031.m, line 10
|     v >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/031.m, line 11
|     ones(1, m) * v == 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/031.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/032.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/032.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/032.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/032.m, line 3
|     maximize(sum(log(x)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/032.m, line 3
|     maximize(sum(log(x)))
|                         ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/032.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/032.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/032.m, line 5
|         A * x <= c;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/032.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/032.m, line 7
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/032.m, line 8
|     variable lambda(L)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/032.m, line 8
|     variable lambda(L)
|              ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/032.m, line 9
|     minimize(c' * lambda - sum(log(A' * lambda)) - n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/032.m, line 9
|     minimize(c' * lambda - sum(log(A' * lambda)) - n)
|                                                     ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/032.m, line 10
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/032.m, line 10
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/032.m, line 11
|         lambda >= 0;
|         ^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/032.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/033.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/033.m, line 2
|     variable Asqr(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/033.m, line 2
|     variable Asqr(n,n) symmetric
|                        ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/033.m, line 3
|     variable btilde(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/033.m, line 3
|     variable btilde(n)
|              ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/033.m, line 4
|     variable t(m)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/033.m, line 4
|     variable t(m)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/033.m, line 5
|     maximize(det_rootn(Asqr))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/033.m, line 5
|     maximize(det_rootn(Asqr))
|                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/033.m, line 6
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/033.m, line 6
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/033.m, line 7
|         t >= 0;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/033.m, line 8
|         for i = 1:m
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/033.m, line 9
|             [-(Asqr - t(i) * As{i}), -(btilde - t(i) * bs{i}), zeros(n, n)
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/033.m, line 10
|             -(btilde - t(i) * bs{i})', -(-1 - t(i) * cs{i}), -btilde'
|             ^ style: indentation not correct, should be -3 spaces, not 12 [fixed] [indentation]
In cvx/033.m, line 11
|             zeros(n, n), -btilde, Asqr] >= 0;
|             ^^^^^ style: indentation not correct, should be -3 spaces, not 12 [fixed] [indentation]
In cvx/033.m, line 12
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/033.m, line 13
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/034.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/034.m, line 2
|     variables a(n) b(1) u(N) v(M)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/034.m, line 2
|     variables a(n) b(1) u(N) v(M)
|                              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/034.m, line 3
|     minimize (ones(1, N) * u + ones(1, M) * v)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/034.m, line 3
|     minimize (ones(1, N) * u + ones(1, M) * v)
|                                              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/034.m, line 4
|     X' * a - b >= 1 - u;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/034.m, line 5
|     Y' * a - b <= -(1 - v);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/034.m, line 6
|     u >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/034.m, line 7
|     v >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/034.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/035.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/035.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/035.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/035.m, line 3
|     minimize (square_pos(norm(x - x0)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/035.m, line 3
|     minimize (square_pos(norm(x - x0)))
|                                       ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/035.m, line 4
|     a' * x == b;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/035.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/036.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/036.m, line 2
|     variable B(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/036.m, line 2
|     variable B(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/036.m, line 3
|     variable d(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/036.m, line 3
|     variable d(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/036.m, line 4
|     maximize(det_rootn(B))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/036.m, line 4
|     maximize(det_rootn(B))
|                          ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/036.m, line 5
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/036.m, line 5
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/036.m, line 6
|         for i = 1:m
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/036.m, line 7
|             norm(B * A(i, :)', 2) + A(i, :) * d <= b(i);
|             ^^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/036.m, line 8
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/036.m, line 9
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/037.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/037.m, line 2
|     variables x(n) y(n) w(n)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/037.m, line 2
|     variables x(n) y(n) w(n)
|                         ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/037.m, line 3
|     dual variables lam muu z
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/037.m, line 3
|     dual variables lam muu z
|                            ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/037.m, line 4
|     minimize (norm(w, 2))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/037.m, line 4
|     minimize (norm(w, 2))
|                         ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/037.m, line 5
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/037.m, line 5
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/037.m, line 6
|         lam:square_pos(norm (A * x + b)) <= 1;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/037.m, line 7
|         muu:square_pos(norm (C * y + d)) <= 1;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/037.m, line 8
|         z:x - y == w;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/037.m, line 9
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/038.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/038.m, line 2
|     variables a(n) b(1) u(N) v(M)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/038.m, line 2
|     variables a(n) b(1) u(N) v(M)
|                              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/038.m, line 3
|     minimize (norm(a) + g * (ones(1, N) * u + ones(1, M) * v))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/038.m, line 3
|     minimize (norm(a) + g * (ones(1, N) * u + ones(1, M) * v))
|                                                              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/038.m, line 4
|     X' * a - b >= 1 - u;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/038.m, line 5
|     Y' * a - b <= -(1 - v);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/038.m, line 6
|     u >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/038.m, line 7
|     v >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/038.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/039.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/039.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/039.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/039.m, line 3
|     minimize (norm(x - x0))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/039.m, line 3
|     minimize (norm(x - x0))
|                           ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/039.m, line 4
|     x <= u;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/039.m, line 5
|     x >= l;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/039.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/040.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/040.m, line 2
|     variables a(np) t(1)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/040.m, line 2
|     variables a(np) t(1)
|                     ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/040.m, line 3
|     minimize (t)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/040.m, line 3
|     minimize (t)
|                ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/040.m, line 4
|     a' * monX <= t;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/040.m, line 5
|     a' * monY >= -t;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/040.m, line 6
|     % For normalization purposes only
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/040.m, line 7
|     norm(a) <= 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/040.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/041.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/041.m, line 2
|     variables x(n) y(n) w(n) h(n) W H
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 2
|     variables x(n) y(n) w(n) h(n) W H
|                                     ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/041.m, line 3
|     minimize (W + H)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 3
|     minimize (W + H)
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/041.m, line 4
|     x >= r;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 5
|     y >= r;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 6
|     w >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 7
|     h >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 8
|     x(5) + w(5) + r <= W;    % No rectangles at the right of Rectangle 5
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 9
|     x(1) + w(1) + r <= x(3); % Rectangle 1 is at the left of Rectangle 3
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 10
|     x(2) + w(2) + r <= x(3); % Rectangle 2 is at the left of Rectangle 3
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 11
|     x(3) + w(3) + r <= x(5); % Rectangle 3 is at the left of Rectangle 5
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 12
|     x(4) + w(4) + r <= x(5); % Rectangle 4 is at the left of Rectangle 5
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 13
|     y(4) + h(4) + r <= H;    % No rectangles on top of Rectangle 4
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 14
|     y(5) + h(5) + r <= H;    % No rectangles on top of Rectangle 5
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 15
|     y(2) + h(2) + r <= y(1); % Rectangle 2 is below Rectangle 1
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 16
|     y(1) + h(1) + r <= y(4); % Rectangle 1 is below Rectangle 4
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 17
|     y(3) + h(3) + r <= y(4); % Rectangle 3 is below Rectangle 4
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 18
|     w <= 5 * h;                % Aspect ratio constraints
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 19
|     h <= 5 * w;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 20
|     w' >= quad_over_lin([A.^.5; zeros(1, n)], h');
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/041.m, line 21
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/042.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/042.m, line 2
|     variable x(2)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/042.m, line 2
|     variable x(2)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/042.m, line 3
|     minimize (sum(square_pos(norms(x * ones(1, K) - P, 2))))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/042.m, line 3
|     minimize (sum(square_pos(norms(x * ones(1, K) - P, 2))))
|                                                            ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/042.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/043.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/043.m, line 2
|     variables muu(n) lambda(m)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/043.m, line 2
|     variables muu(n) lambda(m)
|                      ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/043.m, line 3
|     maximize (muu' * x0 - b' * lambda)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/043.m, line 3
|     maximize (muu' * x0 - b' * lambda)
|                                      ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/043.m, line 4
|     A' * lambda == muu;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/043.m, line 5
|     norm(muu) <= 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/043.m, line 6
|     lambda >= 0;
|     ^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/043.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/044.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/044.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/044.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/044.m, line 3
|     minimize -sum(log(b-A*x))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/044.m, line 3
|     minimize -sum(log(b-A*x))
|              ^^^^^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/044.m, line 4
|     F * x == g;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/044.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/045.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/045.m, line 2
|     variables lam(m) muu(m) z(n)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/045.m, line 2
|     variables lam(m) muu(m) z(n)
|                             ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/045.m, line 3
|     maximize (-b1' * lam - b2' * muu)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/045.m, line 3
|     maximize (-b1' * lam - b2' * muu)
|                                     ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/045.m, line 4
|     A1' * lam + z == 0;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/045.m, line 5
|     A2' * muu - z == 0;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/045.m, line 6
|     norm(z) <= 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/045.m, line 7
|     -lam <= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/045.m, line 8
|     -muu <= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/045.m, line 9
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/046.m, line 1
| cvx_begin sdp quiet
|               ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/046.m, line 2
|     variable X(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/046.m, line 2
|     variable X(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/046.m, line 3
|     minimize (norm(X - X0, 'fro'))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/046.m, line 3
|     minimize (norm(X - X0, 'fro'))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/046.m, line 4
|     X >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/046.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/047.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/047.m, line 2
|     variable x1(2)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/047.m, line 2
|     variable x1(2)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/047.m, line 3
|     minimize (sum(norms(x1 * ones(1, K) - P, 1)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/047.m, line 3
|     minimize (sum(norms(x1 * ones(1, K) - P, 1)))
|                                                 ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/047.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/047.m, line 5
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/047.m, line 6
|     variable x2(2)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/047.m, line 6
|     variable x2(2)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/047.m, line 7
|     minimize (sum(norms(x2 * ones(1, K) - P, 2)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/047.m, line 7
|     minimize (sum(norms(x2 * ones(1, K) - P, 2)))
|                                                 ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/047.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/048.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/048.m, line 2
|     variables x(n) y(n)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/048.m, line 2
|     variables x(n) y(n)
|                    ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/048.m, line 3
|     minimize (norm(x - y))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/048.m, line 3
|     minimize (norm(x - y))
|                          ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/048.m, line 4
|     A1 * x <= b1;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/048.m, line 5
|     A2 * y <= b2;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/048.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/049.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/049.m, line 2
|     variable xs0(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/049.m, line 2
|     variable xs0(n)
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/049.m, line 3
|     minimize (square_pos(norm(xs0 - x0)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/049.m, line 3
|     minimize (square_pos(norm(xs0 - x0)))
|                                         ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/049.m, line 4
|     a' * xs0 <= b;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/049.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/049.m, line 6
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/049.m, line 7
|     variable xs1(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/049.m, line 7
|     variable xs1(n)
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/049.m, line 8
|     minimize (square_pos(norm(xs1 - x1)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/049.m, line 8
|     minimize (square_pos(norm(xs1 - x1)))
|                                         ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/049.m, line 9
|     a' * xs1 <= b;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/049.m, line 10
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/050.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/050.m, line 2
|     variables a(n) b(1)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/050.m, line 2
|     variables a(n) b(1)
|                    ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/050.m, line 3
|     X' * a - b >= 1;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/050.m, line 4
|     Y' * a - b <= -1;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/050.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/051.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/051.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/051.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/051.m, line 3
|     minimize (norm(x - x0))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/051.m, line 3
|     minimize (norm(x - x0))
|                           ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/051.m, line 4
|     x >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/051.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/052.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/052.m, line 2
|     variable P(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/052.m, line 2
|     variable P(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/052.m, line 3
|     variables q(n) r(1)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/052.m, line 3
|     variables q(n) r(1)
|                    ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/052.m, line 4
|     P <= -eye(n);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/052.m, line 5
|     sum((X' * P) .* X', 2) + X' * q + r >= +1;
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/052.m, line 6
|     sum((Y' * P) .* Y', 2) + Y' * q + r <= -1;
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/052.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/053.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/053.m, line 2
|     variable x(N+M,2)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/053.m, line 2
|     variable x(N+M,2)
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/053.m, line 3
|     minimize (sum(square_pos(norms(A * x, 2, 2))))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/053.m, line 3
|     minimize (sum(square_pos(norms(A * x, 2, 2))))
|                                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/053.m, line 4
|     x(N + [1:M], :) == fixed;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/053.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/054.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/054.m, line 2
|     variable x(N+M,2)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/054.m, line 2
|     variable x(N+M,2)
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/054.m, line 3
|     minimize (sum(norms(A * x, 2, 2)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/054.m, line 3
|     minimize (sum(norms(A * x, 2, 2)))
|                                      ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/054.m, line 4
|     x(N + [1:M], :) == fixed;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/054.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/055.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/055.m, line 2
|     variables a(n) b(1) t(1)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/055.m, line 2
|     variables a(n) b(1) t(1)
|                         ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/055.m, line 3
|     maximize (t)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/055.m, line 3
|     maximize (t)
|                ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/055.m, line 4
|     X' * a - b >= t;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/055.m, line 5
|     Y' * a - b <= -t;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/055.m, line 6
|     norm(a) <= 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/055.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/056.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/056.m, line 2
|     variable C1(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 2
|     variable C1(n,n) symmetric
|                      ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/056.m, line 3
|     maximize (C1(1, 4))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 3
|     maximize (C1(1, 4))
|                       ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/056.m, line 4
|     C1 >= 0;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 5
|     diag(C1) == ones(n, 1);
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 6
|     C1(1, 2) >= 0.6;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 7
|     C1(1, 2) <= 0.9;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 8
|     C1(1, 3) >= 0.8;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 9
|     C1(1, 3) <= 0.9;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 10
|     C1(2, 4) >= 0.5;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 11
|     C1(2, 4) <= 0.7;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 12
|     C1(3, 4) >= -0.8;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 13
|     C1(3, 4) <= -0.4;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 14
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/056.m, line 15
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/056.m, line 16
|     variable C2(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 16
|     variable C2(n,n) symmetric
|                      ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/056.m, line 17
|     minimize (C2(1, 4))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 17
|     minimize (C2(1, 4))
|                       ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/056.m, line 18
|     C2 >= 0;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 19
|     diag(C2) == ones(n, 1);
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 20
|     C2(1, 2) >= 0.6;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 21
|     C2(1, 2) <= 0.9;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 22
|     C2(1, 3) >= 0.8;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 23
|     C2(1, 3) <= 0.9;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 24
|     C2(2, 4) >= 0.5;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 25
|     C2(2, 4) <= 0.7;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 26
|     C2(3, 4) >= -0.8;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 27
|     C2(3, 4) <= -0.4;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/056.m, line 28
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/057.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/057.m, line 2
|     variables x(n) y(n) w(n) h(n) W H
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 2
|     variables x(n) y(n) w(n) h(n) W H
|                                     ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/057.m, line 3
|     minimize (W + H)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 3
|     minimize (W + H)
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/057.m, line 4
|     w >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 5
|     h >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 6
|     x(leafs_H) >= rho;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 7
|     y(leafs_V) >= rho;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 8
|     x(roots_H) + w(roots_H) + rho <= W;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 9
|     y(roots_V) + h(roots_V) + rho <= H;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 10
|     for i = 1:length(nodes_H)
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 11
|         node = nodes_H(i);
|         ^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 12
|         c = adj_H(node, :);
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 13
|         prnt = find(c > 0)';
|         ^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 14
|         m = length(prnt);
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 15
|         x(node) + w(node) + rho <= x(prnt);
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 16
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/057.m:17: style: whitespace on blank line [fixed]
In cvx/057.m, line 18
|     for i = 1:length(nodes_V)
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 19
|         node = nodes_V(i);
|         ^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 20
|         c = adj_V(node, :);
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 21
|         prnt = find(c > 0)';
|         ^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 22
|         m = length(prnt);
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 23
|         y(node) + h(node) + rho <= y(prnt);
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 24
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/057.m:25: style: whitespace on blank line [fixed]
In cvx/057.m, line 26
|     if sum(size(u)) ~= 0
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 27
|         h <= u .* w;
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 28
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 29
|     if sum(size(l)) ~= 0
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 30
|         h >= l .* w;
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/057.m, line 31
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 32
|     w' >= quad_over_lin([Amin.^.5; zeros(1, n)], h');
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/057.m, line 33
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/058.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/058.m, line 2
|     variables a(np) t(1)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/058.m, line 2
|     variables a(np) t(1)
|                     ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/058.m, line 3
|     minimize (t)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/058.m, line 3
|     minimize (t)
|                ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/058.m, line 4
|     a' * monX <= t;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/058.m, line 5
|     a' * monY >= -t;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/058.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/059.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/059.m, line 2
|     variables x(n) y(n)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/059.m, line 2
|     variables x(n) y(n)
|                    ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/059.m, line 3
|     minimize (norm(x - y))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/059.m, line 3
|     minimize (norm(x - y))
|                          ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/059.m, line 4
|     norm(x, 1) <= 2;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/059.m, line 5
|     norm(y - [4; 3], inf) <= 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/059.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/060.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/060.m, line 2
|     variable x(N+M,2)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/060.m, line 2
|     variable x(N+M,2)
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/060.m, line 3
|     minimize (sum(square_pos(square_pos(norms(A * x, 2, 2)))))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/060.m, line 3
|     minimize (sum(square_pos(square_pos(norms(A * x, 2, 2)))))
|                                                              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/060.m, line 4
|     x(N + [1:M], :) == fixed;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/060.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/061.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/061.m, line 2
|     variable A(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/061.m, line 2
|     variable A(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/061.m, line 3
|     variable b(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/061.m, line 3
|     variable b(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/061.m, line 4
|     maximize(det_rootn(A))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/061.m, line 4
|     maximize(det_rootn(A))
|                          ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/061.m, line 5
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/061.m, line 5
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/061.m, line 6
|         norms(A * x + b * ones(1, m), 2) <= 1;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/061.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/062.m, line 1
| cvx_begin gp
|           ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/062.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/062.m, line 3
|     variables z(n) t(q) s(m)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/062.m, line 3
|     variables z(n) t(q) s(m)
|                         ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/062.m:4: style: whitespace on blank line [fixed]
In cvx/062.m, line 5
|     minimize(prod(t) * prod(s))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/062.m, line 5
|     minimize(prod(t) * prod(s))
|                               ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/062.m, line 6
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/062.m, line 6
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/062.m, line 7
|         for k = 1:q
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/062.m, line 8
|             prod(z.^(X(k, :)')) <= t(k);
|             ^^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/062.m, line 9
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/062.m:10: style: whitespace on blank line [fixed]
In cvx/062.m, line 11
|         for k = 1:m
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/062.m, line 12
|             1 + prod(z.^(-X(k, :)')) <= s(k);
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/062.m, line 13
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/062.m, line 14
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/063.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/063.m, line 2
|     variable u( m )
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/063.m, line 2
|     variable u( m )
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/063.m, line 3
|     minimize(b' * u + 0.5 * sum_square(chol(Sigma) * A' * u))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/063.m, line 3
|     minimize(b' * u + 0.5 * sum_square(chol(Sigma) * A' * u))
|                                                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/063.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/063.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/063.m, line 5
|         u >= 0;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/063.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 2
|     variable lambda(p)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/064.m, line 2
|     variable lambda(p)
|              ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 3
|     maximize (det_rootn(V * diag(lambda) * V'))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/064.m, line 3
|     maximize (det_rootn(V * diag(lambda) * V'))
|                                               ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/064.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 5
|         sum(lambda) == 1;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/064.m, line 6
|         lambda >= 0;
|         ^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/064.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 8
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 9
|     variables lambda(p) u(n)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/064.m, line 9
|     variables lambda(p) u(n)
|                         ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 10
|     minimize (sum(u))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/064.m, line 10
|     minimize (sum(u))
|                     ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 11
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/064.m, line 11
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 12
|         for k = 1:n
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/064.m, line 13
|             [V * diag(lambda) * V'  e(:, k)
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/064.m, line 14
|             e(k, :)             u(k)] >= 0;
|             ^ style: indentation not correct, should be -3 spaces, not 12 [fixed] [indentation]
In cvx/064.m, line 15
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/064.m, line 16
|         sum(lambda) == 1;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/064.m, line 17
|         lambda >= 0;
|         ^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/064.m, line 18
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 19
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 20
|     variables t lambda(p)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/064.m, line 20
|     variables t lambda(p)
|                 ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 21
|     maximize (t)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/064.m, line 21
|     maximize (t)
|                ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 22
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/064.m, line 22
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/064.m, line 23
|         V * diag(lambda) * V' >= t * eye(n, n);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/064.m, line 24
|         sum(lambda) == 1;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/064.m, line 25
|         lambda >= 0;
|         ^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/064.m, line 26
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/065.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/065.m, line 2
|     variable S(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/065.m, line 2
|     variable S(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/065.m, line 3
|     maximize(log_det(S) - trace(S * Y))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/065.m, line 3
|     maximize(log_det(S) - trace(S * Y))
|                                       ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/065.m, line 4
|     S >= Ui;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/065.m, line 5
|     S <= Li;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/065.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 2
|     variables pent(n)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 2
|     variables pent(n)
|               ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 3
|     maximize(sum(entr(pent)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 3
|     maximize(sum(entr(pent)))
|                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 4
|     sum(pent) == 1;
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 5
|     A * pent <= b;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 7
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 8
|     variable p( n )
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 8
|     variable p( n )
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 9
|     minimize sum( p(1:t) )
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 9
|     minimize sum( p(1:t) )
|              ^^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 10
|     p >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 11
|     sum(p) == 1;
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 12
|     A * p <= b;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 13
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 14
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 15
|     variable p( n )
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 15
|     variable p( n )
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 16
|     maximize sum( p(1:t) )
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 16
|     maximize sum( p(1:t) )
|              ^^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/066.m, line 17
|     p >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 18
|     sum(p) == 1;
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 19
|     A * p <= b;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/066.m, line 20
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/067.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/067.m, line 2
|     variables T( m, n ) D( m, m )
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/067.m, line 2
|     variables T( m, n ) D( m, m )
|                         ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/067.m, line 3
|     minimize max( D(1,2), D(2,1) )
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/067.m, line 3
|     minimize max( D(1,2), D(2,1) )
|              ^^^^^^^^^^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/067.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/067.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/067.m, line 5
|         D == T * P;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/067.m, line 6
|         sum(T, 1) == 1;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/067.m, line 7
|         T >= 0;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/067.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/068.m, line 1
| cvx_begin sdp quiet
|               ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/068.m, line 2
|     variable P(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/068.m, line 2
|     variable P(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/068.m, line 3
|     variables q(n) r tau(m)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/068.m, line 3
|     variables q(n) r tau(m)
|                      ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/068.m, line 4
|     dual variables Z{m}
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/068.m, line 4
|     dual variables Z{m}
|                    ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/068.m, line 5
|     maximize(1 - trace(Sigma * P) - r)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/068.m, line 5
|     maximize(1 - trace(Sigma * P) - r)
|                                      ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/068.m, line 6
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/068.m, line 6
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/068.m, line 7
|         for i = 1:m
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/068.m, line 8
|             qadj = q - 0.5 * tau(i) * A(i, :)';
|             ^^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/068.m, line 9
|             radj = r - 1 + tau(i) * b(i);
|             ^^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/068.m, line 10
|             [P, qadj; qadj', radj] >= 0:Z{i};
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/068.m, line 11
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/068.m, line 12
|         [P, q; q', r] >= 0;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/068.m, line 13
|         tau >= 0;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/068.m, line 14
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/069.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/069.m, line 2
|     variables x(2)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/069.m, line 2
|     variables x(2)
|               ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/069.m, line 3
|     maximize(y' * U * x - sum(log_sum_exp([zeros(1, m) x' * U'])))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/069.m, line 3
|     maximize(y' * U * x - sum(log_sum_exp([zeros(1, m) x' * U'])))
|                                                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/069.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/070.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/070.m, line 2
|     variables a(n) b(1)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/070.m, line 2
|     variables a(n) b(1)
|                    ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/070.m, line 3
|     maximize sum(y.*log(a'*u+b) - (a'*u+b))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/070.m, line 3
|     maximize sum(y.*log(a'*u+b) - (a'*u+b))
|              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/070.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/071.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/071.m, line 2
|     variable xhub(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/071.m, line 2
|     variable xhub(n)
|              ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/071.m, line 3
|     minimize(sum(huber(A * xhub - b)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/071.m, line 3
|     minimize(sum(huber(A * xhub - b)))
|                                      ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/071.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/072.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/072.m, line 2
|     variables u(m+1) g_x(m+1) g_y(m+1)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/072.m, line 2
|     variables u(m+1) g_x(m+1) g_y(m+1)
|                               ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/072.m, line 3
|     minimize(u(k) - u(m + 1))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/072.m, line 3
|     minimize(u(k) - u(m + 1))
|                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/072.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/072.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/072.m, line 5
|         g_x >= 0;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 6
|         g_y >= 0;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 7
|         ones(m + 1, 1) * u' <= u * ones(1, m + 1) + (g_x * ones(1, m + 1)) .* ...
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 7
|         ones(m + 1, 1) * u' <= u * ones(1, m + 1) + (g_x * ones(1, m + 1)) .* ...
|                                                                                 ^^ style: line exceeds 80 characters [line_length]
In cvx/072.m, line 8
|         (ones(m + 1, 1) * data(:, 1)' - data(:, 1) * ones(1, m + 1)) + ...
|         ^ style: indentation not correct, should be 2 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 9
|         (g_y * ones(1, m + 1)) .* (ones(m + 1, 1) * data(:, 2)' - data(:, 2) * ones(1, m + 1));
|         ^ style: indentation not correct, should be 2 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 9
|         (g_y * ones(1, m + 1)) .* (ones(m + 1, 1) * data(:, 2)' - data(:, 2) * ones(1, m + 1));
|                                                                                 ^^^^^^^^^^^^^^^^ style: line exceeds 80 characters [line_length]
In cvx/072.m, line 10
|         (u * ones(1, m + 1)) .* Pweak >= (ones(m + 1, 1) * u') .* Pweak;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 11
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/072.m, line 12
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/072.m, line 13
|     variables u(m+1) g_x(m+1) g_y(m+1)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/072.m, line 13
|     variables u(m+1) g_x(m+1) g_y(m+1)
|                               ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/072.m, line 14
|     maximize(u(k) - u(m + 1))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/072.m, line 14
|     maximize(u(k) - u(m + 1))
|                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/072.m, line 15
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/072.m, line 15
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/072.m, line 16
|         g_x >= 0;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 17
|         g_y >= 0;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 18
|         ones(m + 1, 1) * u' <= u * ones(1, m + 1) + (g_x * ones(1, m + 1)) .* ...
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 18
|         ones(m + 1, 1) * u' <= u * ones(1, m + 1) + (g_x * ones(1, m + 1)) .* ...
|                                                                                 ^^ style: line exceeds 80 characters [line_length]
In cvx/072.m, line 19
|         (ones(m + 1, 1) * data(:, 1)' - data(:, 1) * ones(1, m + 1)) + ...
|         ^ style: indentation not correct, should be 2 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 20
|         (g_y * ones(1, m + 1)) .* (ones(m + 1, 1) * data(:, 2)' - data(:, 2) * ones(1, m + 1));
|         ^ style: indentation not correct, should be 2 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 20
|         (g_y * ones(1, m + 1)) .* (ones(m + 1, 1) * data(:, 2)' - data(:, 2) * ones(1, m + 1));
|                                                                                 ^^^^^^^^^^^^^^^^ style: line exceeds 80 characters [line_length]
In cvx/072.m, line 21
|         (u * ones(1, m + 1)) .* Pweak >= (ones(m + 1, 1) * u') .* Pweak;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/072.m, line 22
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/073.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/073.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/073.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/073.m, line 3
|     minimize(norm(A * x - b))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/073.m, line 3
|     minimize(norm(A * x - b))
|                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/073.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/073.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/073.m, line 5
|         norm(x, 1) <= alpha;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/073.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/074.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/074.m, line 2
|     variable x1(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/074.m, line 2
|     variable x1(n)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/074.m, line 3
|     minimize (norm(A * x1 - v', inf))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/074.m, line 3
|     minimize (norm(A * x1 - v', inf))
|                                     ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/074.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 2
|     variable x1(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/075.m, line 2
|     variable x1(n)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 3
|     minimize(norm(A * x1 + b, 1))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/075.m, line 3
|     minimize(norm(A * x1 + b, 1))
|                                 ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 5
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 6
|     variable xdz(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/075.m, line 6
|     variable xdz(n)
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 7
|     minimize(sum(max(abs(A * xdz + b) - dz, 0)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/075.m, line 7
|     minimize(sum(max(abs(A * xdz + b) - dz, 0)))
|                                                ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 9
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 10
|     variable xlb(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/075.m, line 10
|     variable xlb(n)
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 11
|     minimize norm(A*xlb+b,Inf)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/075.m, line 11
|     minimize norm(A*xlb+b,Inf)
|              ^^^^^^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/075.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/076.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/076.m, line 2
|     variable u(N+1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/076.m, line 2
|     variable u(N+1)
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/076.m, line 3
|     minimize (square_pos(norm(H * u - y_des)) / (N + 1) + ...
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/076.m, line 4
|     eta(i) * square_pos(norm(u)) / (N + 1) + ...
|     ^^^ style: indentation not correct, should be 10 spaces, not 4 [fixed] [indentation]
In cvx/076.m, line 5
|     delta(i) * square_pos(norm(D * u)) / N);
|     ^^^^^ style: indentation not correct, should be 10 spaces, not 4 [fixed] [indentation]
In cvx/076.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/077.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/077.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/077.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/077.m, line 3
|     minimize(norm(x - corrupt) + lambda * norm(x(2:n) - x(1:n - 1)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/077.m, line 3
|     minimize(norm(x - corrupt) + lambda * norm(x(2:n) - x(1:n - 1)))
|                                                                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/077.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/077.m, line 5
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/077.m, line 6
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/077.m, line 6
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/077.m, line 7
|     minimize(norm(x(2:n) - x(1:n - 1)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/077.m, line 7
|     minimize(norm(x(2:n) - x(1:n - 1)))
|                                       ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/077.m, line 8
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/077.m, line 8
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/077.m, line 9
|         norm(x - corrupt) <= alpha;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/077.m, line 10
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/078.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/078.m, line 2
|     variable x(30561)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/078.m, line 2
|     variable x(30561)
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/078.m, line 3
|     minimize(sum_square(A * x - b) + norm(x, 1))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/078.m, line 3
|     minimize(sum_square(A * x - b) + norm(x, 1))
|                                                ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/078.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/079.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/079.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/079.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/079.m, line 3
|     minimize (norm(x - corrupt) + lambdas(i) * norm(D * x))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/079.m, line 3
|     minimize (norm(x - corrupt) + lambdas(i) * norm(D * x))
|                                                           ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/079.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/080.m, line 1
| cvx_begin sdp quiet
|               ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/080.m, line 2
|     variables t lambda xrob(n)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/080.m, line 2
|     variables t lambda xrob(n)
|                        ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/080.m, line 3
|     minimize(t + lambda)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/080.m, line 3
|     minimize(t + lambda)
|                        ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/080.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/080.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/080.m, line 5
|         [eye(m) A1 * xrob A2 * xrob A0 * xrob - b; ...
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/080.m, line 6
|         [A1 * xrob A2 * xrob]' lambda * eye(2) zeros(2, 1); ...
|         ^ style: indentation not correct, should be -7 spaces, not 8 [fixed] [indentation]
In cvx/080.m, line 7
|         [A0 * xrob - b]' zeros(1, 2) t] >= 0;
|         ^ style: indentation not correct, should be -7 spaces, not 8 [fixed] [indentation]
In cvx/080.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 2
|     variable x_nom(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/081.m, line 2
|     variable x_nom(n)
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 3
|     minimize (norm(A * x_nom - b))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/081.m, line 3
|     minimize (norm(A * x_nom - b))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 5
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 6
|     variable x_stoch(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/081.m, line 6
|     variable x_stoch(n)
|              ^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 7
|     minimize (square_pos(norm(A * x_stoch - b)) + quad_form(x_stoch, P))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/081.m, line 7
|     minimize (square_pos(norm(A * x_stoch - b)) + quad_form(x_stoch, P))
|                                                                        ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 8
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 9
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 10
|     variable x_wc(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/081.m, line 10
|     variable x_wc(n)
|              ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 11
|     minimize (max(norm((A - B) * x_wc - b), norm((A + B) * x_wc - b)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/081.m, line 11
|     minimize (max(norm((A - B) * x_wc - b), norm((A + B) * x_wc - b)))
|                                                                      ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/081.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 2
|     variable xrec(n+1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 2
|     variable xrec(n+1)
|              ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 3
|     minimize(norm(xrec - corrupt))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 3
|     minimize(norm(xrec - corrupt))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 5
|         norm(xrec(2:(n + 1)) - xrec(1:n), 1) <= TVs(i);
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/082.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 7
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 8
|     variable xrec(n+1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 8
|     variable xrec(n+1)
|              ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 9
|     minimize(norm(xrec - corrupt))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 9
|     minimize(norm(xrec - corrupt))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 10
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 10
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 11
|         norm(xrec(2:(n + 1)) - xrec(1:n), 1) <= 10;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/082.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 13
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 14
|     variable xrec(n+1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 14
|     variable xrec(n+1)
|              ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 15
|     minimize(norm(xrec - corrupt))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 15
|     minimize(norm(xrec - corrupt))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 16
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 16
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 17
|         norm(xrec(2:(n + 1)) - xrec(1:n), 1) <= 8;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/082.m, line 18
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 19
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 20
|     variable xrec(n+1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 20
|     variable xrec(n+1)
|              ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 21
|     minimize(norm(xrec - corrupt))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 21
|     minimize(norm(xrec - corrupt))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 22
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/082.m, line 22
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/082.m, line 23
|         norm(xrec(2:(n + 1)) - xrec(1:n), 1) <= 5;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/082.m, line 24
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/083.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/083.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/083.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/083.m, line 3
|     minimize(sum(max(abs(A * x - b) - 1, 0)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/083.m, line 3
|     minimize(sum(max(abs(A * x - b) - 1, 0)))
|                                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/083.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/084.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/084.m, line 2
|     variables x1(n) x2(n) x3(n)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 2
|     variables x1(n) x2(n) x3(n)
|                           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/084.m, line 3
|     minimize (norm([A1 * x1 A2 * x2 A3 * x3] - v'))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 3
|     minimize (norm([A1 * x1 A2 * x2 A3 * x3] - v'))
|                                                   ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/084.m, line 4
|     % continuity conditions at point a
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 5
|     [1 a a^2   a^3] * x1 == [1 a a^2   a^3] * x2;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 6
|     [0 1 2 * a 3 * a^2] * x1 == [0 1 2 * a 3 * a^2] * x2;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 7
|     [0 0   2 6 * a] * x1 == [0 0   2 6 * a] * x2;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 8
|     % continuity conditions at point b
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 9
|     [1 b b^2   b^3] * x2 == [1 b b^2   b^3] * x3;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 10
|     [0 1 2 * b 3 * b^2] * x2 == [0 1 2 * b 3 * b^2] * x3;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 11
|     [0 0   2 6 * b] * x2 == [0 0   2 6 * b] * x3;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/084.m, line 13
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/084.m, line 14
|     variables xl1(n) xl2(n) xl3(n)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 14
|     variables xl1(n) xl2(n) xl3(n)
|                             ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/084.m, line 15
|     minimize (norm([A1 * xl1 A2 * xl2 A3 * xl3] - v', inf))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 15
|     minimize (norm([A1 * xl1 A2 * xl2 A3 * xl3] - v', inf))
|                                                           ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/084.m, line 16
|     % continuity conditions at point a
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 17
|     [1 a a^2   a^3] * xl1 == [1 a a^2   a^3] * xl2;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 18
|     [0 1 2 * a 3 * a^2] * xl1 == [0 1 2 * a 3 * a^2] * xl2;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 19
|     [0 0   2 6 * a] * xl1 == [0 0   2 6 * a] * xl2;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 20
|     % continuity conditions at point b
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 21
|     [1 b b^2   b^3] * xl2 == [1 b b^2   b^3] * xl3;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 22
|     [0 1 2 * b 3 * b^2] * xl2 == [0 1 2 * b 3 * b^2] * xl3;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 23
|     [0 0   2 6 * b] * xl2 == [0 0   2 6 * b] * xl3;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/084.m, line 24
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/085.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/085.m, line 2
|     variables yhat(m) g(m)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/085.m, line 2
|     variables yhat(m) g(m)
|                       ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/085.m, line 3
|     minimize(norm(yns - yhat))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/085.m, line 3
|     minimize(norm(yns - yhat))
|                              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/085.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/085.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/085.m, line 5
|         yhat * ones(1, m) >= ones(m, 1) * yhat' + (ones(m, 1) * g') .* (u * ones(1, m) - ones(m, 1) * u');
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/085.m, line 5
|         yhat * ones(1, m) >= ones(m, 1) * yhat' + (ones(m, 1) * g') .* (u * ones(1, m) - ones(m, 1) * u');
|                                                                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: line exceeds 80 characters [line_length]
In cvx/085.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/086.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/086.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/086.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/086.m, line 3
|     minimize ((1 / 2) * quad_form(x, P) + q' * x + r)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/086.m, line 3
|     minimize ((1 / 2) * quad_form(x, P) + q' * x + r)
|                                                     ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/086.m, line 4
|     x >= -1;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/086.m, line 5
|     x <=  1;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/086.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/087.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/087.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/087.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/087.m, line 3
|     y = P * x;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/087.m, line 4
|     maximize (c' * x + sum(entr(y)) / log(2))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/087.m, line 4
|     maximize (c' * x + sum(entr(y)) / log(2))
|                                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/087.m, line 5
|     x >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/087.m, line 6
|     sum(x) == 1;
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/087.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/088.m, line 1
| cvx_begin gp
|           ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/088.m, line 2
|     variable d(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/088.m, line 2
|     variable d(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/088.m, line 3
|     minimize(sqrt(sum(sum(diag(d.^2) * (M.^2) * diag(d.^-2)))))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/088.m, line 3
|     minimize(sqrt(sum(sum(diag(d.^2) * (M.^2) * diag(d.^-2)))))
|                                                               ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/088.m, line 4
|     % Alternate formulation: norm( diag(d)*abs(M)*diag(1./d), 'fro' )
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/088.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/089.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/089.m, line 2
|     variable P(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/089.m, line 2
|     variable P(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/089.m, line 3
|     minimize(norm(P - (1 / n) * ones(n)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/089.m, line 3
|     minimize(norm(P - (1 / n) * ones(n)))
|                                         ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/089.m, line 4
|     P * ones(n, 1) == ones(n, 1);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/089.m, line 5
|     P >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/089.m, line 6
|     P(E == 0) == 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/089.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/090.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/090.m, line 2
|     variable r(1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/090.m, line 2
|     variable r(1)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/090.m, line 3
|     variable x_c(2)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/090.m, line 3
|     variable x_c(2)
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/090.m, line 4
|     maximize (r)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/090.m, line 4
|     maximize (r)
|                ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/090.m, line 5
|     a1' * x_c + r * norm(a1, 2) <= b(1);
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/090.m, line 6
|     a2' * x_c + r * norm(a2, 2) <= b(2);
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/090.m, line 7
|     a3' * x_c + r * norm(a3, 2) <= b(3);
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/090.m, line 8
|     a4' * x_c + r * norm(a4, 2) <= b(4);
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/090.m, line 9
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/091.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/091.m, line 2
|     variable r(1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/091.m, line 2
|     variable r(1)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/091.m, line 3
|     variable x_c(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/091.m, line 3
|     variable x_c(n)
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/091.m, line 4
|     dual variable y
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/091.m, line 4
|     dual variable y
|                   ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/091.m, line 5
|     maximize (r)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/091.m, line 5
|     maximize (r)
|                ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/091.m, line 6
|     y:A * x_c + r * norm_ai <= b;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/091.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/092.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/092.m, line 2
|     variable t
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/092.m, line 2
|     variable t
|              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/092.m, line 3
|     minimize (c * t)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/092.m, line 3
|     minimize (c * t)
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/092.m, line 4
|     A >= t * B;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/092.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/093.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/093.m, line 2
|     variable x_opt(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/093.m, line 2
|     variable x_opt(n)
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/093.m, line 3
|     maximize sum(Pi.*log(P*x_opt))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/093.m, line 3
|     maximize sum(Pi.*log(P*x_opt))
|              ^^^^^^^^^^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/093.m, line 4
|     sum(x_opt) == 1;
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/093.m, line 5
|     x_opt >= 0;
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/093.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/094.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/094.m, line 2
|     % A is a PSD symmetric matrix (n-by-n)
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 3
|     variable A(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 3
|     variable A(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/094.m, line 4
|     A >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/094.m:5: style: whitespace on blank line [fixed]
In cvx/094.m, line 6
|     % constrained matrix entries.
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 7
|     A(1, 1) == 3;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 8
|     A(2, 2) == 2;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 9
|     A(3, 3) == 1;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 10
|     A(4, 4) == 5;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 11
|     % Note that because A is symmetric, these off-diagonal
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 12
|     % constraints affect the corresponding element on the
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 13
|     % opposite side of the diagonal.
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 14
|     A(1, 2) == .5;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 15
|     A(1, 4) == .25;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 16
|     A(2, 3) == .75;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/094.m:17: style: whitespace on blank line [fixed]
In cvx/094.m, line 18
|     % find the solution to the problem
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 19
|     maximize(log_det(A))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 19
|     maximize(log_det(A))
|                        ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/094.m, line 20
|     % maximize( det_rootn( A ) )
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/094.m, line 21
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/095.m, line 1
| cvx_begin gp
|           ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/095.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/095.m, line 3
|     variables w(N) h(N) v(N+1) y(N+1)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/095.m, line 3
|     variables w(N) h(N) v(N+1) y(N+1)
|                                ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/095.m:4: style: whitespace on blank line [fixed]
In cvx/095.m, line 5
|     % objective is the total volume of the beam
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/095.m, line 6
|     % obj = sum of (widths*heights*lengths) over each section
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/095.m, line 7
|     % (recall that the length of each segment is set to be 1)
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/095.m, line 8
|     minimize(w' * h)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/095.m, line 8
|     minimize(w' * h)
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/095.m, line 9
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/095.m, line 9
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/095.m, line 10
|         % non-recursive formulation
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/095.m, line 11
|         d = 6 * F * ones(N, 1) ./ (E * ones(N, 1) .* w .* h.^3);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/095.m, line 12
|         for i = 1:N
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/095.m, line 13
|             (2 * i - 1) * d(i) + v(i + 1) <= v(i);
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/095.m, line 14
|             (i - 1 / 3) * d(i) + v(i + 1) + y(i + 1) <= y(i);
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/095.m, line 15
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/095.m:16: style: whitespace on blank line [fixed]
In cvx/095.m, line 17
|         % constraint set
|         ^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/095.m, line 18
|         wmin <= w    <= wmax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/095.m, line 19
|         hmin <= h    <= hmax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/095.m, line 20
|         Smin <= h ./ w <= Smax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/095.m, line 21
|         6 * F * [1:N]' ./ (w .* (h.^2)) <= sigma_max;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/095.m, line 22
|         y(1) <= ymax;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/095.m, line 23
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 2
|     variable x1(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 2
|     variable x1(n)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 3
|     minimize(matrix_frac(A * x1 + b, eye(m) + B * diag(x1) * B'))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 3
|     minimize(matrix_frac(A * x1 + b, eye(m) + B * diag(x1) * B'))
|                                                                 ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 4
|     x1 >= 0;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 6
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 7
|     variable x2(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 7
|     variable x2(n)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 8
|     variable Y(n,n) diagonal
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 8
|     variable Y(n,n) diagonal
|                     ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 9
|     minimize(matrix_frac(A * x2 + b, eye(m) + B * Y * B'))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 9
|     minimize(matrix_frac(A * x2 + b, eye(m) + B * Y * B'))
|                                                          ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 10
|     x2 >= 0;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 11
|     Y == diag(x2);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 13
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 14
|     variables x3(n) w(n) v(m)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 14
|     variables x3(n) w(n) v(m)
|                          ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 15
|     minimize(square_pos(norm(v)) + matrix_frac(w, diag(x3)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 15
|     minimize(square_pos(norm(v)) + matrix_frac(w, diag(x3)))
|                                                            ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 16
|     v + B * w == A * x3 + b;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 17
|     x3 >= 0;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 18
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 19
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 20
|     variables x4(n) w(n) v(m)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 20
|     variables x4(n) w(n) v(m)
|                          ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 21
|     variable Y(n,n) diagonal
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 21
|     variable Y(n,n) diagonal
|                     ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 22
|     minimize(square_pos(norm(v)) + matrix_frac(w, Y))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 22
|     minimize(square_pos(norm(v)) + matrix_frac(w, Y))
|                                                     ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/096.m, line 23
|     v + B * w == A * x4 + b;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 24
|     x4 >= 0;
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 25
|     Y == diag(x4);
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/096.m, line 26
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 2
|     variable x1(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 2
|     variable x1(n)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 3
|     minimize(sum(huber(A * x1 - b, M)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 3
|     minimize(sum(huber(A * x1 - b, M)))
|                                       ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 5
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 6
|     variable x2(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 6
|     variable x2(n)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 7
|     variable w(m)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 7
|     variable w(m)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 8
|     minimize(sum(quad_over_lin(diag(A * x2 - b), w' + 1)) + M^2 * ones(1, m) * w)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 8
|     minimize(sum(quad_over_lin(diag(A * x2 - b), w' + 1)) + M^2 * ones(1, m) * w)
|                                                                                 ^^ style: line exceeds 80 characters [line_length]
In cvx/097.m, line 8
|     minimize(sum(quad_over_lin(diag(A * x2 - b), w' + 1)) + M^2 * ones(1, m) * w)
|                                                                                 ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 9
|     w >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 10
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 11
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 12
|     variable x3(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 12
|     variable x3(n)
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 13
|     variable u(m)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 13
|     variable u(m)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 14
|     variable v(m)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 14
|     variable v(m)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 15
|     minimize(sum(square(u) +  2 * M * v))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 15
|     minimize(sum(square(u) +  2 * M * v))
|                                         ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/097.m, line 16
|     A * x3 - b <= u + v;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 17
|     A * x3 - b >= -u - v;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 18
|     u >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 19
|     u <= M;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 20
|     v >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/097.m, line 21
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/098.m, line 1
| cvx_begin gp
|           ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/098.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/098.m, line 3
|     variables lambda b(4) s(3) v(4) c(2)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/098.m, line 3
|     variables lambda b(4) s(3) v(4) c(2)
|                                     ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/098.m:4: style: whitespace on blank line [fixed]
In cvx/098.m, line 5
|     % objective is the Perron-Frobenius eigenvalue
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/098.m, line 6
|     minimize(lambda)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/098.m, line 6
|     minimize(lambda)
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/098.m, line 7
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/098.m, line 7
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/098.m, line 8
|         % inequality constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 9
|         b' * v      <= lambda * v(1);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 10
|         s(1) * v(1) <= lambda * v(2);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 11
|         s(2) * v(2) <= lambda * v(3);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 12
|         s(3) * v(3) <= lambda * v(4);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 13
|         [0.5; 0.5] <= c;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 14
|         c <= [2; 2];
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 15
|         % equality constraints
|         ^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 16
|         b == b_nom .* ((ones(4, 1) * (c(1) / c_nom(1))).^alpha) .* ...
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 17
|         ((ones(4, 1) * (c(2) / c_nom(2))).^beta);
|         ^ style: indentation not correct, should be 2 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 18
|         s == s_nom .* ((ones(3, 1) * (c(1) / c_nom(1))).^gamma) .* ...
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 19
|         ((ones(3, 1) * (c(2) / c_nom(2))).^delta);
|         ^ style: indentation not correct, should be 2 spaces, not 8 [fixed] [indentation]
In cvx/098.m, line 20
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/099.m, line 1
| cvx_begin gp
|           ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/099.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 3
|     variables w(N) h(N)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 3
|     variables w(N) h(N)
|                    ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/099.m:4: style: whitespace on blank line [fixed]
In cvx/099.m, line 5
|     % setting up variables relations
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 6
|     % (recursive formulation)
|     ^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 7
|     v = cvx(zeros(N + 1, 1));
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 8
|     y = cvx(zeros(N + 1, 1));
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 9
|     for i = N:-1:1
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 10
|         fprintf(1, 'Building recursive relations for index: %d\n', i);
|         ^^^^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/099.m, line 11
|         v(i) = 12 * (i - 1 / 2) * F / (E * w(i) * h(i)^3) + v(i + 1);
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/099.m, line 12
|         y(i) = 6 * (i - 1 / 3) * F / (E * w(i) * h(i)^3)  + v(i + 1) + y(i + 1);
|         ^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/099.m, line 13
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/099.m:14: style: whitespace on blank line [fixed]
In cvx/099.m, line 15
|     % objective is the total volume of the beam
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 16
|     % obj = sum of (widths*heights*lengths) over each section
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 17
|     % (recall that the length of each segment is set to be 1)
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 18
|     minimize(w' * h)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 18
|     minimize(w' * h)
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/099.m, line 19
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/099.m, line 19
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/099.m, line 20
|         % constraint set
|         ^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/099.m, line 21
|         wmin <= w    <= wmax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/099.m, line 22
|         hmin <= h    <= hmax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/099.m, line 23
|         Smin <= h ./ w <= Smax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/099.m, line 24
|         6 * F * [1:N]' ./ (w .* (h.^2)) <= sigma_max;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/099.m, line 25
|         y(1) <= ymax;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/099.m, line 26
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/100.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/100.m, line 2
|     variable r(n,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/100.m, line 2
|     variable r(n,1)
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/100.m:3: style: whitespace on blank line [fixed]
In cvx/100.m, line 4
|     % this is a feasibility problem
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/100.m, line 5
|     minimize(max(abs(As * r)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/100.m, line 5
|     minimize(max(abs(As * r)))
|                              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/100.m, line 6
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/100.m, line 6
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/100.m, line 7
|         % passband constraints
|         ^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/100.m, line 8
|         Ap * r >= (Lp.^2);
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/100.m, line 9
|         Ap * r <= (Up.^2);
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/100.m, line 10
|         % nonnegative-real constraint for all frequencies (a bit redundant)
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/100.m, line 11
|         A * r >= 0;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/100.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/101.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/101.m, line 2
|     variable h_cur(n+1,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/101.m, line 2
|     variable h_cur(n+1,1)
|              ^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/101.m, line 3
|     % feasibility problem
|     ^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/101.m, line 4
|     % passband bounds
|     ^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/101.m, line 5
|     Ap * h_cur <= 10^(delta / 20);
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/101.m, line 6
|     Ap * h_cur >= 10^(-delta / 20);
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/101.m, line 7
|     % stopband bounds
|     ^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/101.m, line 8
|     abs(As * h_cur) <= 10^(atten_level / 20);
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/101.m, line 9
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/102.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/102.m, line 2
|     variable c(M,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/102.m, line 2
|     variable c(M,1)
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/102.m, line 3
|     variable d(N-1,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/102.m, line 3
|     variable d(N-1,1)
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/102.m:4: style: whitespace on blank line [fixed]
In cvx/102.m, line 5
|     % feasibility problem
|     ^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/102.m, line 6
|     % passband constraints
|     ^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/102.m, line 7
|     (Ap_num * c) <= (10^(+delta / 20))^2 * (Ap_den * [1; d]); % upper constr
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/102.m, line 8
|     (Ap_num * c) >= (10^(-delta / 20))^2 * (Ap_den * [1; d]); % lower constr
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/102.m, line 9
|     % stopband constraint
|     ^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/102.m, line 10
|     (As_num * c) <= (Us_cur) * (As_den * [1; d]); % upper constr
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/102.m, line 11
|     % nonnegative-real constraint
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/102.m, line 12
|     Anum * c >= 0;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/102.m, line 13
|     Aden * [1; d] >= 0;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/102.m, line 14
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/103.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/103.m, line 2
|     variables r_cur(n_cur,1)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/103.m, line 2
|     variables r_cur(n_cur,1)
|               ^^^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/103.m, line 3
|     minimize(max(abs(As * r_cur)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/103.m, line 3
|     minimize(max(abs(As * r_cur)))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/103.m, line 4
|     10^(-delta / 10) <= Ap * r_cur <= 10^(+delta / 10);
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/103.m, line 5
|     A * r_cur >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/103.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/104.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/104.m, line 2
|     variable delta
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/104.m, line 2
|     variable delta
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/104.m, line 3
|     variable h(n+1,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/104.m, line 3
|     variable h(n+1,1)
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/104.m:4: style: whitespace on blank line [fixed]
In cvx/104.m, line 5
|     minimize(delta)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/104.m, line 5
|     minimize(delta)
|                   ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/104.m, line 6
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/104.m, line 6
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/104.m, line 7
|         % passband bounds
|         ^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/104.m, line 8
|         Ap * h <= delta;
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/104.m, line 9
|         inv_pos(Ap * h) <= delta;
|         ^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/104.m:10: style: whitespace on blank line [fixed]
In cvx/104.m, line 11
|         % stopband bounds
|         ^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/104.m, line 12
|         abs(As * h) <= Us;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/104.m, line 13
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/105.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/105.m, line 2
|     variable h(n,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/105.m, line 2
|     variable h(n,1)
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/105.m, line 3
|     minimize(max(abs(A * h - Hdes)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/105.m, line 3
|     minimize(max(abs(A * h - Hdes)))
|                                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/105.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/106.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/106.m, line 2
|     variable hf(n,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/106.m, line 2
|     variable hf(n,1)
|              ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/106.m, line 3
|     minimize(max(abs(G .* (A * hf) - Gdes)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/106.m, line 3
|     minimize(max(abs(G .* (A * hf) - Gdes)))
|                                            ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/106.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/106.m, line 5
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/106.m, line 6
|     variable t
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/106.m, line 6
|     variable t
|              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/106.m, line 7
|     variable ht(n,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/106.m, line 7
|     variable ht(n,1)
|              ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/106.m:8: style: whitespace on blank line [fixed]
In cvx/106.m, line 9
|     minimize(max(abs(Tconv(times_not_D, :) * ht)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/106.m, line 9
|     minimize(max(abs(Tconv(times_not_D, :) * ht)))
|                                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/106.m, line 10
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/106.m, line 10
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/106.m, line 11
|         Tconv(D + 1, :) * ht == 1;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/106.m, line 12
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/107.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/107.m, line 2
|     variable c(M,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 2
|     variable c(M,1)
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/107.m, line 3
|     variable d(N-1,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 3
|     variable d(N-1,1)
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/107.m:4: style: whitespace on blank line [fixed]
In cvx/107.m, line 5
|     % feasibility problem
|     ^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 6
|     % passband constraints
|     ^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 7
|     (Ap_num * c) <= (10^(+delta / 20))^2 * (Ap_den * [1; d]); % upper constr
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 8
|     (Ap_num * c) >= (10^(-delta / 20))^2 * (Ap_den * [1; d]); % lower constr
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 9
|     % stopband constraint
|     ^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 10
|     (As1_num * c) <= (Us_cur) * (As1_den * [1; d]); % upper constr
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 11
|     (As2_num * c) <= (Us_cur) * (As2_den * [1; d]); % upper constr
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 12
|     % nonnegative-real constraint
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 13
|     Anum * c >= 0;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 14
|     Aden * [1; d] >= 0;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/107.m, line 15
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/108.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/108.m, line 2
|     variable h(n+1,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/108.m, line 2
|     variable h(n+1,1)
|              ^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/108.m, line 3
|     minimize(norm(As * h, Inf))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/108.m, line 3
|     minimize(norm(As * h, Inf))
|                               ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/108.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/108.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/108.m, line 5
|         10^(-ripple / 20) <= Ap * h <= 10^(ripple / 20);
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/108.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/109.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/109.m, line 2
|     variable r(n,1)   % auto-correlation coefficients
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/109.m, line 2
|     variable r(n,1)   % auto-correlation coefficients
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/109.m, line 3
|     variable R(m,1)   % power spectrum
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/109.m, line 3
|     variable R(m,1)   % power spectrum
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/109.m:4: style: whitespace on blank line [fixed]
In cvx/109.m, line 5
|     % log-chebychev minimax design
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/109.m, line 6
|     minimize(max(max([R ./ (D.^2)  (D.^2) .* inv_pos(R)]')))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/109.m, line 6
|     minimize(max(max([R ./ (D.^2)  (D.^2) .* inv_pos(R)]')))
|                                                            ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/109.m, line 7
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/109.m, line 7
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/109.m, line 8
|         % power spectrum constraint
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/109.m, line 9
|         R == Al * r;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/109.m, line 10
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/110.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/110.m, line 2
|     variable h_cur(n_cur+1,1)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/110.m, line 2
|     variable h_cur(n_cur+1,1)
|              ^^^^^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/110.m, line 3
|     minimize(max(abs(As * h_cur)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/110.m, line 3
|     minimize(max(abs(As * h_cur)))
|                                  ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/110.m, line 4
|     10^(-delta / 20) <= Ap * h_cur <=  10^(+delta / 20);
|     ^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/110.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/111.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/111.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/111.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/111.m, line 3
|     minimize(0.5 * sum_square(y - x) + lambda * norm(D * x, 1))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/111.m, line 3
|     minimize(0.5 * sum_square(y - x) + lambda * norm(D * x, 1))
|                                                               ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/111.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/112.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/112.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/112.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/112.m, line 3
|     minimize -sum(w.*log(b-A*x))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/112.m, line 3
|     minimize -sum(w.*log(b-A*x))
|              ^^^^^^^^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/112.m, line 4
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/113.m, line 1
| cvx_begin sdp quiet
|               ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/113.m, line 2
|     variable S(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/113.m, line 2
|     variable S(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/113.m, line 3
|     maximize log_det(S) - trace(S*Y) - lambda(i)*sum(sum(abs(S)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/113.m, line 3
|     maximize log_det(S) - trace(S*Y) - lambda(i)*sum(sum(abs(S)))
|                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/113.m, line 4
|     S >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/113.m, line 5
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/114.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/114.m, line 2
|     variable x(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/114.m, line 2
|     variable x(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/114.m, line 3
|     maximize sum(entr(x))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/114.m, line 3
|     maximize sum(entr(x))
|              ^^^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/114.m, line 4
|     A * x == b;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/114.m, line 5
|     F * x <= g;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/114.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/115.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/115.m, line 2
|     variable S(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/115.m, line 2
|     variable S(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/115.m, line 3
|     maximize log_det(S) - trace(S*Y)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/115.m, line 3
|     maximize log_det(S) - trace(S*Y)
|                           ^^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/115.m, line 4
|     sum(sum(abs(S))) <= alpha;
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/115.m, line 5
|     S >= 0;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/115.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/116.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/116.m, line 2
|     variable w(n*P) complex
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/116.m, line 2
|     variable w(n*P) complex
|                     ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/116.m, line 3
|     minimize(max(abs(As * w)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/116.m, line 3
|     minimize(max(abs(As * w)))
|                              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/116.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/116.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/116.m, line 5
|         % target direction equality constraint
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/116.m, line 6
|         Atar * w == 1;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/116.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/117.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/117.m, line 2
|     variable w(n) complex
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/117.m, line 2
|     variable w(n) complex
|                   ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/117.m, line 3
|     minimize(norm(w))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/117.m, line 3
|     minimize(norm(w))
|                     ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/117.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/117.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/117.m, line 5
|         Atar * w == 1;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/117.m, line 6
|         abs(As * w) <= 10^(min_sidelobe / 20);
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/117.m, line 7
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/118.m, line 1
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/118.m, line 2
|     variable w(n) complex
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/118.m, line 2
|     variable w(n) complex
|                   ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/118.m, line 3
|     % feasibility problem
|     ^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/118.m, line 4
|     Atar * w == 1;
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/118.m, line 5
|     abs(As * w) <= 10^(min_sidelobe / 20);
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/118.m, line 6
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/118.m, line 7
| cvx_begin quiet
|           ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/118.m, line 8
|     variable w(n) complex
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/118.m, line 8
|     variable w(n) complex
|                   ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/118.m, line 9
|     minimize(norm(w))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/118.m, line 9
|     minimize(norm(w))
|                     ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/118.m, line 10
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/118.m, line 10
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/118.m, line 11
|         Atar * w == 1;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/118.m, line 12
|         abs(As * w) <= 10^(min_sidelobe / 20);
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/118.m, line 13
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/119.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/119.m, line 2
|     variable w(n) complex
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/119.m, line 2
|     variable w(n) complex
|                   ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/119.m, line 3
|     minimize(max(abs(As * w)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/119.m, line 3
|     minimize(max(abs(As * w)))
|                              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/119.m, line 4
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/119.m, line 4
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/119.m, line 5
|         Atar * w == 1;   % target constraint
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/119.m, line 6
|         if HAS_NULLS   % nulls constraints
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/119.m, line 7
|             Anull * w == 0;
|             ^^^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/119.m, line 8
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/119.m, line 9
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/120.m, line 1
| cvx_begin
| ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/120.m, line 2
|     variable r(2*n-1,1) complex
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/120.m, line 2
|     variable r(2*n-1,1) complex
|                         ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/120.m, line 3
|     % minimize stopband attenuation
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/120.m, line 4
|     minimize(max(real(As * r)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/120.m, line 4
|     minimize(max(real(As * r)))
|                               ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/120.m, line 5
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/120.m, line 5
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/120.m, line 6
|         % passband ripple constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/120.m, line 7
|         (10^(-ripple / 20))^2 <= real(Ap * r) <= (10^(+ripple / 20))^2;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/120.m, line 8
|         % nonnegative-real constraint for all frequencies
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/120.m, line 9
|         % a bit redundant: the passband frequencies are already constrained
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/120.m, line 10
|         real(A * r) >= 0;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/120.m, line 11
|         % auto-correlation symmetry constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/120.m, line 12
|         imag(r(n)) == 0;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/120.m, line 13
|         r(n - 1:-1:1) == conj(r(n + 1:end));
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/120.m, line 14
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/121.m, line 1
| cvx_begin gp quiet
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/121.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/121.m, line 3
|     variables v(M) y(M) w(M)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/121.m, line 3
|     variables v(M) y(M) w(M)
|                         ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/121.m:4: style: whitespace on blank line [fixed]
In cvx/121.m, line 5
|     % objective function is the base transmit time
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/121.m, line 6
|     tau_B = C * w(1);
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/121.m:7: style: whitespace on blank line [fixed]
In cvx/121.m, line 8
|     minimize(tau_B)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/121.m, line 8
|     minimize(tau_B)
|                   ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/121.m, line 9
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/121.m, line 9
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/121.m, line 10
|         % fixed problem constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/121.m, line 11
|         Nmin <= v <= Nmax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/121.m:12: style: whitespace on blank line [fixed]
In cvx/121.m, line 13
|         for i = 1:M - 1
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/121.m, line 14
|             y(i + 1) + v(i)^pwj <= y(i);
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/121.m, line 15
|             w(i + 1) + y(i) * v(i)^pwi <= w(i);
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/121.m, line 16
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/121.m:17: style: whitespace on blank line [fixed]
In cvx/121.m, line 18
|         % equalities
|         ^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/121.m, line 19
|         y(M) == v(M)^pwj;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/121.m, line 20
|         w(M) == y(M) * v(M)^pwi;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/121.m:21: style: whitespace on blank line [fixed]
In cvx/121.m, line 22
|         % changing constraint
|         ^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/121.m, line 23
|         (WB * beta_min_GE(k) / (M * Nref^(g1 - g2) * Dn0)) * y(1) <= 1;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/121.m, line 24
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/122.m, line 1
| cvx_begin gp
|           ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/122.m, line 2
|     variables v(M) y(M) w(M)
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/122.m, line 2
|     variables v(M) y(M) w(M)
|                         ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/122.m:3: style: whitespace on blank line [fixed]
In cvx/122.m, line 4
|     % objective function is the base transmit time
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/122.m, line 5
|     tau_B = C * w(1);
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/122.m:6: style: whitespace on blank line [fixed]
In cvx/122.m, line 7
|     minimize(tau_B)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/122.m, line 7
|     minimize(tau_B)
|                   ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/122.m, line 8
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/122.m, line 8
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/122.m, line 9
|         % problem constraints
|         ^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/122.m, line 10
|         v >= Nmin;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/122.m, line 11
|         v <= Nmax;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/122.m:12: style: whitespace on blank line [fixed]
In cvx/122.m, line 13
|         for i = 1:M - 1
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/122.m, line 14
|             if mod(i, 100) == 0 fprintf(1, 'progress counter: %d\n', i);
|             ^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/122.m, line 14
|             if mod(i, 100) == 0 fprintf(1, 'progress counter: %d\n', i);
|                               ^ style: end statement with a newline [fixed] [end_of_statements]
In cvx/122.m, line 16
|             end
|             ^^^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/122.m, line 17
|             y(i + 1) + v(i)^pwj <= y(i);
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/122.m, line 18
|             w(i + 1) + y(i) * v(i)^pwi <= w(i);
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
cvx/122.m:19: style: whitespace on blank line [fixed]
In cvx/122.m, line 19
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/122.m, line 21
|         y(M) == v(M)^pwj;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/122.m, line 22
|         w(M) == y(M) * v(M)^pwi;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/122.m, line 23
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/123.m, line 1
| cvx_begin gp
|           ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/123.m, line 2
|     variable P(n)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/123.m, line 2
|     variable P(n)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/123.m, line 3
|     % objective function is the total transmitter power
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/123.m, line 4
|     minimize(sum(P))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/123.m, line 4
|     minimize(sum(P))
|                    ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/123.m, line 5
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/123.m, line 5
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/123.m, line 6
|         % formulate the inverse SINR at each receiver using vectorize features
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/123.m, line 7
|         Gdiag = diag(G);          % the main diagonal of G matrix
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/123.m, line 8
|         Gtilde = G - diag(Gdiag); % G matrix without the main diagonal
|         ^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/123.m, line 9
|         % inverse SINR
|         ^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/123.m, line 10
|         inverseSINR = (sigma + Gtilde * P) ./ (Gdiag .* P);
|         ^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/123.m, line 11
|         % constraints are power limits and minimum SINR level
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/123.m, line 12
|         Pmin <= P <= Pmax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/123.m, line 13
|         inverseSINR <= (1 / SINR_min);
|         ^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/123.m, line 14
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/124.m, line 1
| cvx_begin gp quiet
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/124.m, line 2
|     variables wa wb wc wd ha hb hc hd
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/124.m, line 2
|     variables wa wb wc wd ha hb hc hd
|                                    ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/124.m, line 3
|     % objective function is the area of the bounding box
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/124.m, line 4
|     minimize(max(wa + wb, wc + wd) * (max(ha, hb) + max(hc, hd)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/124.m, line 4
|     minimize(max(wa + wb, wc + wd) * (max(ha, hb) + max(hc, hd)))
|                                                                 ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/124.m, line 5
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/124.m, line 5
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/124.m, line 6
|         % constraints (now impose the non-changing constraints)
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/124.m, line 7
|         ha * wa == a;
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/124.m, line 8
|         hb * wb == b;
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/124.m, line 9
|         hc * wc == c;
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/124.m, line 10
|         hd * wd == d;
|         ^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/124.m, line 11
|         1 / alpha(n) <= ha / wa <= alpha(n);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/124.m, line 12
|         1 / alpha(n) <= hb / wb <= alpha(n);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/124.m, line 13
|         1 / alpha(n) <= hc / wc <= alpha(n);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/124.m, line 14
|         1 / alpha(n) <= hd / wd <= alpha(n);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/124.m, line 15
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/125.m, line 1
| cvx_begin gp quiet
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/125.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 3
|     variable w(N-1)     % wire width
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 3
|     variable w(N-1)     % wire width
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/125.m, line 4
|     variable T(N)       % arrival time (Elmore delay to node i)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 4
|     variable T(N)       % arrival time (Elmore delay to node i)
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/125.m:5: style: whitespace on blank line [fixed]
In cvx/125.m, line 6
|     % area definition
|     ^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 7
|     area = sum(w .* l);
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/125.m:8: style: whitespace on blank line [fixed]
In cvx/125.m, line 9
|     % wire segment resistance is inversely proportional to widths
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 10
|     R = alpha .* l ./ w;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 11
|     R = [Rsource; R];
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/125.m:12: style: whitespace on blank line [fixed]
In cvx/125.m, line 13
|     % wire segment capacitance is an affine function of widths
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 14
|     C_bar = beta .* l .* w + gamma .* l;
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 15
|     C_bar = [0; C_bar];
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/125.m:16: style: whitespace on blank line [fixed]
In cvx/125.m, line 17
|     % compute common capacitances for each node (C_tilde in GP tutorial)
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 18
|     C_tilde = cvx(zeros(N, 1));
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 19
|     for node = [1:N]
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 20
|         C_tilde(node, 1) = Cload(node);
|         ^^^^^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 21
|         for k = parent(node)
|         ^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 22
|             if k > 0
|             ^^ style: indentation not correct, should be 8 spaces, not 12 [fixed] [indentation]
In cvx/125.m, line 23
|                 C_tilde(node, 1) = C_tilde(node, 1) + C_bar(k);
|                 ^^^^^^^ style: indentation not correct, should be 12 spaces, not 16 [fixed] [indentation]
In cvx/125.m, line 24
|             end
|             ^^^ style: indentation not correct, should be 8 spaces, not 12 [fixed] [indentation]
In cvx/125.m, line 25
|         end
|         ^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 26
|         for k = children{node}
|         ^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 27
|             C_tilde(node, 1) = C_tilde(node, 1) + C_bar(k);
|             ^^^^^^^ style: indentation not correct, should be 8 spaces, not 12 [fixed] [indentation]
In cvx/125.m, line 28
|         end
|         ^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 29
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/125.m:30: style: whitespace on blank line [fixed]
In cvx/125.m, line 31
|     % now compute total downstream capacitances
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 32
|     C_total = C_tilde;
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 33
|     for node = N:-1:1
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 34
|         for k = children{node}
|         ^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 35
|             C_total(node, 1) = C_total(node, 1) + C_total(k, 1);
|             ^^^^^^^ style: indentation not correct, should be 8 spaces, not 12 [fixed] [indentation]
In cvx/125.m, line 36
|         end
|         ^^^ style: indentation not correct, should be 4 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 37
|     end
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/125.m:38: style: whitespace on blank line [fixed]
In cvx/125.m, line 39
|     % objective is the critical Elmore delay
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 40
|     minimize(max(T(leafs)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 40
|     minimize(max(T(leafs)))
|                           ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/125.m, line 41
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/125.m, line 41
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/125.m, line 42
|         % generate Elmore delay constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 43
|         R(1) * C_total(1) <= T(1, 1);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 44
|         for node = 2:N
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 45
|             R(node) * C_total(node) + T(parent(node), 1) <= T(node, 1);
|             ^ style: indentation not correct, should be 4 spaces, not 12 [fixed] [indentation]
In cvx/125.m, line 46
|         end
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/125.m:47: style: whitespace on blank line [fixed]
In cvx/125.m, line 48
|         % area and width constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 49
|         area <= Amax;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 50
|         w >= Wmin;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 51
|         w <= Wmax;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/125.m, line 52
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/126.m, line 1
| cvx_begin gp quiet
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/126.m, line 2
|     variables h w d
|     ^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/126.m, line 2
|     variables h w d
|                   ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/126.m, line 3
|     % objective function is the box volume
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/126.m, line 4
|     maximize(h * w * d)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/126.m, line 4
|     maximize(h * w * d)
|                       ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/126.m, line 5
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/126.m, line 5
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/126.m, line 6
|         2 * (h * w + h * d) <= Awall_k;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/126.m, line 7
|         w * d <= Afloor_n;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/126.m, line 8
|         alpha <= h / w <= beta;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/126.m, line 9
|         gamma <= d / w <= delta;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/126.m, line 10
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/127.m, line 1
| cvx_begin gp quiet
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/127.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/127.m, line 3
|     variable x(m)                 % scale factors
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/127.m, line 3
|     variable x(m)                 % scale factors
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/127.m, line 4
|     variable t(m)                 % arrival times
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/127.m, line 4
|     variable t(m)                 % arrival times
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/127.m:5: style: whitespace on blank line [fixed]
In cvx/127.m, line 6
|     % objective is the upper bound on the overall delay
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/127.m, line 7
|     % and that is the max of arrival times for output gates 6 and 7
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/127.m, line 8
|     minimize(max(t(6), t(7)))
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/127.m, line 8
|     minimize(max(t(6), t(7)))
|                             ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/127.m, line 9
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/127.m, line 9
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/127.m, line 10
|         % input capacitance is an affine function of sizes
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 11
|         cin = alpha + beta .* x;
|         ^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/127.m:12: style: whitespace on blank line [fixed]
In cvx/127.m, line 13
|         % load capacitance is the input capacitance times the fan-out matrix
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 14
|         % given by Fout = Aout*Ain'
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 15
|         cload = (Aout * Ain') * cin;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 16
|         cload(6) = Cout6;          % load capacitance of the output gate 6
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 17
|         cload(7) = Cout7;          % load capacitance of othe utput gate 7
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/127.m:18: style: whitespace on blank line [fixed]
In cvx/127.m, line 19
|         % delay is the product of its driving resistance R = gamma./x and cload
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 20
|         d = cload .* gamma ./ x;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/127.m:21: style: whitespace on blank line [fixed]
In cvx/127.m, line 22
|         % power and area definitions
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 23
|         power = (f .* e)' * x;
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 24
|         area = a' * x;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/127.m:25: style: whitespace on blank line [fixed]
In cvx/127.m, line 26
|         % scale size, power, and area constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 27
|         x >= 1;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 28
|         power <= Pmax(n);
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 29
|         area <= Amax(k);
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/127.m:30: style: whitespace on blank line [fixed]
In cvx/127.m, line 31
|         % create timing constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 32
|         % these constraints enforce t_j + d_j <= t_i over all gates j that drive gate i
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 32
|         % these constraints enforce t_j + d_j <= t_i over all gates j that drive gate i
|                                                                                 ^^^^^^^^ style: line exceeds 80 characters [line_length]
In cvx/127.m, line 33
|         Aout' * t + Ain' * d <= Ain' * t;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
cvx/127.m:34: style: whitespace on blank line [fixed]
In cvx/127.m, line 35
|         % for gates with inputs not connected to other gates we enforce d_i <= t_i
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 35
|         % for gates with inputs not connected to other gates we enforce d_i <= t_i
|                                                                                 ^^^ style: line exceeds 80 characters [line_length]
In cvx/127.m, line 36
|         d(1:3) <= t(1:3);
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/127.m, line 37
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/128.m, line 1
| cvx_begin gp quiet
|              ^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/128.m, line 2
|     % optimization variables
|     ^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 3
|     variable x(m)           % scale factors
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 3
|     variable x(m)           % scale factors
|              ^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
cvx/128.m:4: style: whitespace on blank line [fixed]
In cvx/128.m, line 5
|     % input capacitance is an affine function of sizes
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 6
|     cin = alpha + beta .* x;
|     ^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/128.m:7: style: whitespace on blank line [fixed]
In cvx/128.m, line 8
|     % load capacitance of a gate is the sum of its fan-out c_in's
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 9
|     clear cload; % start with a fresh variable
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 10
|     cload(1) = cin(4);
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 11
|     cload(2) = cin(4) + cin(5);
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 12
|     cload(3) = cin(5) + cin(7);
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 13
|     cload(4) = cin(6) + cin(7);
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 14
|     cload(5) = cin(7);
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 15
|     % output gates have their load capacitances
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 16
|     cload(6) = Cout6;
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 17
|     cload(7) = Cout7;
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/128.m:18: style: whitespace on blank line [fixed]
In cvx/128.m, line 19
|     % gate delay is the product of its driving res. R = gamma./x and cload
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 20
|     d = (cload') .* gamma ./ x;
|     ^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/128.m:21: style: whitespace on blank line [fixed]
In cvx/128.m, line 22
|     power = (f .* e)' * x;         % total power
|     ^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 23
|     area = a' * x;               % total area
|     ^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/128.m:24: style: whitespace on blank line [fixed]
In cvx/128.m, line 25
|     % evaluate delay over all paths in the given circuit (there are 7 paths)
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 26
|     path_delays = [ ...
|     ^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 27
|     d(1) + d(4) + d(6)  % delay of path 1
|     ^ style: indentation not correct, should be 15 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 28
|     d(1) + d(4) + d(7)  % delay of path 2, etc...
|     ^ style: indentation not correct, should be 15 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 29
|     d(2) + d(4) + d(6)
|     ^ style: indentation not correct, should be 15 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 30
|     d(2) + d(4) + d(7)
|     ^ style: indentation not correct, should be 15 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 31
|     d(2) + d(5) + d(7)
|     ^ style: indentation not correct, should be 15 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 32
|     d(3) + d(5) + d(6)
|     ^ style: indentation not correct, should be 15 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 33
|     d(3) + d(7)];
|     ^ style: indentation not correct, should be 15 spaces, not 4 [fixed] [indentation]
cvx/128.m:34: style: whitespace on blank line [fixed]
In cvx/128.m, line 35
|     % overall circuit delay
|     ^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 36
|     circuit_delay = (max(path_delays));
|     ^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
cvx/128.m:37: style: whitespace on blank line [fixed]
In cvx/128.m, line 38
|     % objective is the worst-case delay
|     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 39
|     minimize(circuit_delay)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 39
|     minimize(circuit_delay)
|                           ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/128.m, line 40
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/128.m, line 40
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/128.m, line 41
|         % construct the constraints
|         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/128.m, line 42
|         x >= 1;             % all sizes greater than 1 (normalized)
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/128.m, line 43
|         power <= Pmax(n);   % power constraint
|         ^^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/128.m, line 44
|         area <= Amax(k);    % area constraint
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/128.m, line 45
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/129.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/129.m, line 2
|     variable w(m,1)   % edge weights
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/129.m, line 2
|     variable w(m,1)   % edge weights
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/129.m, line 3
|     variable s        % epigraph variable
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/129.m, line 3
|     variable s        % epigraph variable
|              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/129.m, line 4
|     variable L(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/129.m, line 4
|     variable L(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/129.m, line 5
|     minimize(s)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/129.m, line 5
|     minimize(s)
|               ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/129.m, line 6
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/129.m, line 6
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/129.m, line 7
|         L == A * diag(w) * A';
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/129.m, line 8
|         -s * I <= J - L <= s * I;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/129.m, line 9
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/130.m, line 1
| cvx_begin sdp
|           ^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/130.m, line 2
|     variable w(m,1)   % edge weights
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/130.m, line 2
|     variable w(m,1)   % edge weights
|              ^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/130.m, line 3
|     variable s        % epigraph variable
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/130.m, line 3
|     variable s        % epigraph variable
|              ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/130.m, line 4
|     variable L(n,n) symmetric
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/130.m, line 4
|     variable L(n,n) symmetric
|                     ^^^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/130.m, line 5
|     minimize(s)
|     ^^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/130.m, line 5
|     minimize(s)
|               ^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/130.m, line 6
|     subject to
|     ^^^^^^^ style: indentation not correct, should be 0 spaces, not 4 [fixed] [indentation]
In cvx/130.m, line 6
|     subject to
|             ^^ style: end statement with a semicolon [fixed] [end_of_statements]
In cvx/130.m, line 7
|         L == A * diag(w) * A';
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/130.m, line 8
|         -s * I <= J - L <= +s * I;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/130.m, line 9
|         w >= 0;
|         ^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/130.m, line 10
|         diag(L) <= 1;
|         ^^^^ style: indentation not correct, should be 0 spaces, not 8 [fixed] [indentation]
In cvx/130.m, line 11
| cvx_end
| ^^^^^^^ style: end statement with a semicolon [fixed] [end_of_statements]
MISS_HIT Style Summary: 130 file(s) analysed, 2194 style issue(s)

=== HTML MODE ===
MISS_HIT Style Summary: 130 file(s) analysed, 2194 style issue(s)

=== ! BROKEN FIXES ! ===
Fixing is not idempotent for ./cvx/033.m
Fixing is not idempotent for ./cvx/064.m
Fixing is not idempotent for ./cvx/080.m
